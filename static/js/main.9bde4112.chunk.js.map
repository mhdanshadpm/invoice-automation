{"version":3,"sources":["store/invoiceSlice.js","store/UISlice.js","utils/functions.js","containers/Home/TableRow/index.js","containers/Home/TableBody/index.js","store/projectsSlice.js","firebase.js","constants/routes.js","components/Header.js","containers/Home/TableHeader/index.js","containers/Home/index.js","constants/app.js","containers/WeekInvoice/index.js","containers/Login/index.js","containers/Projects/index.js","assets/fonts/Arial_Bold.ttf","assets/fonts/Arial.ttf","assets/fonts/Arial-mt-extra-bold.ttf","containers/InvoicePDF/index.js","containers/Invoice/index.js","App.js","reportWebVitals.js","store/index.js","index.js"],"names":["invoiceSlice","createSlice","name","initialState","app","data","file","undefined","json","cardData","formData","to","project","balance","nextMonthEstimate","minDate","maxDate","activeItem","invoiceMode","invoiceNumber","dateRange","Date","reducers","setWeekInvoiceData","state","action","payload","setSelectedFile","setSelectedJSONFile","setCardData","setFormData","setAppData","actions","selectInvoiceData","invoice","selectCSVFile","selectJSONFile","selectCardData","selectFormData","selectAppData","UISlice","shouldEnableCardCalculation","toggleShouldEnableCardCalculation","selectShouldEnableCardCalculation","ui","numberWithCommas","x","toString","replace","getTimeFromSecondsHHMM","seconds","hoursFromSeconds","parseInt","moment","utc","format","getSecondsFromTimeHHMM","time","timeArray","split","Number","zeroPad","num","size","s","String","length","getNumbersInRangeAsArray","start","end","difference","array","i","push","TableRow","no","setHourlyRate","onChangeHoursWorked","deleteWorkerData","invoiceDataKeys","showCardColumns","useSelector","useState","hoursWorked","setHoursWorked","isHoursWorkedValid","setIsHoursWorkedValid","shouldEdit","setShoudEdit","isWorkerExist","setIsWorkerExist","prevKey","newKey","worker","setWorker","dispatch","useDispatch","weekInvoiceData","inputRef","createRef","useEffect","Table","Row","style","textAlign","Cell","Input","error","type","placeholder","value","onChange","e","includes","target","Button","backgroundColor","onClick","alert","updatedWeekInvoiceData","Object","keys","reduce","newWeekInvoiceData","week","tempWeekInvoiceData","weekData","console","log","icon","labelPosition","ref","width","test","hoursBilled","Dropdown","search","hourlyRate","toFixed","fluid","selection","options","map","number","key","text","totalInUSD","total","cardTotal","role","average","asTeamMember","asQAPerson","TableBody","invoiceData","addWorkerData","initialWorkerData","hours","timeWorked","workerData","setWorkerData","updateWorkerData","Body","sort","index","cardKey","matches","stringSimilarity","findBestMatch","bestMatch","rating","getBestMatch","Form","Field","splittedTime","billedMinutes","Footer","HeaderCell","usd","projectsSlice","list","storeProjects","selectProjects","projects","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","useFirebase","initializeApp","analytics","getAnalytics","dbRef","getDatabase","fireStore","getFirestore","getTestData","get","child","getProjectsList","a","getDocs","collection","setProject","id","setDoc","doc","addProject","getUser","username","query","where","setInvoiceAppInfo","deleteProject","deleteDoc","getInvoiceAppInfo","getDoc","routes","HOME","PROJECTS","LOGIN","WEEK_INVOICE","INVOICE","MONTH_INVOICE","DOWNLOAD_INVOICE","Header","navigate","useNavigate","setActiveItem","handleItemClick","margin","Menu","Item","children","active","position","marginRight","localStorage","removeItem","primary","TableHeader","Home","Version2Client","host","authentication","basic","email","password","getItem","selectedFile","selectedJSONFile","documentRef","jsonRef","from","setFrom","setTo","setData","setBalance","setNextMonthEstimate","setMinDate","setMaxDate","setInvoiceMode","setInvoiceNumber","show","deleteData","setDeleteData","setDateRange","sprintDateRange","sprints","setSprints","then","r","docs","_projects","docSnap","exists","last_invoice_number","hideDeleteConfirm","deleteWorkerDataConfirm","updatedInvoiceData","getTotal","findAndSaveTotalInvoiceData","filter","item","_updatedInvoiceData","rate","_updatedWeekInvoiceData","weekKey","values","totalInSeconds","hoursWorkedInSeconds","invoiceByWorkers","_invoiceMerged","_invoiceByWorkers","totalInvoice","_totalInvoice","totalSeconds","Total","toISOString","startDay","weeks","firstDate","numDays","getDate","numDays2","dayOfWeekCounter","getDay","date","w","dates","getWeeksInRange","weeks2","lastDate","day","startOf","isSameOrBefore","add","toDate","getWeeksInRangeV2","weeksInvoice","_weeksInvoice","workers","startTime","start_time","isBetween","endOf","_workers","formattedKey","toLowerCase","letter","toUpperCase","_invoiceData","totalDurationInseconds","duration_seconds","minutesFromSecond","flooredMinutes","getInvoiceData","weeks2Sprint","_sprints","subtract","weekday","onChangeDateRange","range","url","URL","createObjectURL","readRemoteFile","header","skipEmptyLines","complete","min","max","getCardTotal","_result","_cards","totalDays","cards","jsonDataByAssignee","JSON","parse","cardDataTemp","_cardData","cardName","histories","changelog","status","find","items","created","todoDate","field","actualToDoDate","isBefore","isAfter","inPeerReview","actualInPeerReview","inQADate","actualInQADate","inStagingDate","actualInStagingDate","noOfDaysWorkedAsTeamMember","isoWeekdayCalc","rangeStart","rangeEnd","weekdays","noOfDaysWorkedAsQAPerson","_totalDays","card","updatedCardData","cardsTotal","weekly_invoice_address","week_balance","monthly_invoice_address","month_balance","isInvoiceModeMonth","isInvoiceModeWeek","renderTableSegment","period","Segment","as","celled","striped","onClickFileInput","current","click","onClickJSONFileInput","onDeleteJSONFile","tempCardData","tempSelectedJSONFile","renderJSONFileInput","marginBottom","display","justifyContent","Label","pointing","positive","negative","buttonText","content","className","Icon","hasWeekInvoice","showTabsAndTable","onChangeFile","files","onChangeJSONFile","renderSelectWeekDropdown","weekOptions","startDate","endDate","renderNextMonthEstimateInput","label","activeIndex","setActiveIndex","onChangeActiveIndex","newIndex","renderCardTables","Accordion","styled","Title","Content","colSpan","flexDirection","alignItems","onChangeWorkerRole","border","renderNoCardDetailsWarning","Message","warning","Confirm","open","padding","fontSize","onCancel","onConfirm","Grid","Column","mobile","tablet","computer","dropdownOptions","startBalanceLabel","endBalanceLabel","endBalance","readOnly","TextArea","renderInvoiceForm","hidden","accept","renderFileInput","color","secondary","paddingRight","Checkbox","toggle","checked","href","renderCardSection","zeroPaddedInvoiceNumber","projectName","startBalance","renderGenerateInvoiceButton","WeekInvoice","useLocation","divRef","bucket","totalPayable","jsPDF","minHeight","fontFamily","fontWeight","cellSpacing","cellPadding","verticalAlign","whiteSpace","paddingTop","paddingBottom","parseFloat","LoginForm","setUsername","setPassword","height","maxWidth","stacked","iconPosition","autoFocus","snapshot","passwordFromDb","sha1","setItem","catch","Projects","isDeleting","setIsDeleting","selectedProject","setSelectedProject","showConfirm","setShowConfirm","initialValues","DisplayingErrorMessagesSchema","Yup","shape","required","updateProjectsList","formik","setValues","resetForm","useFormik","validationSchema","onSubmit","setSubmitting","renderError","touched","errors","onItemClick","cancelButton","confirmButton","List","handleChange","onBlur","handleBlur","setFieldValue","loading","isSubmitting","isValid","submitForm","Font","register","family","fonts","src","arial","arialBold","fontStyle","arialExtraBold","InvoicePDF","isWeekMode","styles","document","page","section","table","borderWidth","cellText","cellBoldText","borderRightWidth","borderTopWidth","top","marginTop","flex","lineHeight","left","paddingHorizontal","alignSelf","title","renderMonthInvoiceDetails","StyleSheet","create","paddingVertical","Styles","div","AddressTable","columns","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","BillingInfoTable","InvoiceTable","getStyle","BalanceTable","Invoice","appData","showPrintButton","setShowPrintButton","addressTableColumns","React","useMemo","accessor","billingInfoTableColumns","balanceTableColumns","invoiceTableColumns","addressData","billingData","billingDate","balanceData","noOfTickets","averageAge","boxShadow","setTimeout","window","print","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","projectsReducer","invoiceReducer","ReactDOM","StrictMode","store","getElementById"],"mappings":"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","file":"static/js/main.9bde4112.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nexport const invoiceSlice = createSlice({\n  name: 'invoice',\n  initialState: {\n    app: {},\n    data: {},\n    file: undefined,\n    json: undefined,\n    cardData: {},\n    formData: {\n      to: '',\n      project: '',\n      balance: '',\n      nextMonthEstimate: 0,\n      minDate: undefined,\n      maxDate: undefined,\n      activeItem: 'Week 1',\n      invoiceMode: 'week',\n      invoiceNumber: 0,\n      data: [],\n      dateRange: [new Date(), new Date()]\n    },\n  },\n  reducers: {\n    setWeekInvoiceData: (state, action) => {\n      state.data= action.payload;\n    },\n    setSelectedFile: (state, action) => {\n      state.file = action.payload\n    },\n    setSelectedJSONFile: (state, action) => {\n      state.json = action.payload\n    },\n    setCardData: (state, action) => {\n      state.cardData = action.payload\n    },\n    setFormData: (state, action) => {\n      state.formData = {\n        ...state.formData,\n        ...action.payload,\n      }\n    },\n    setAppData: (state, action) => {\n      state.app = {\n        ...state.app,\n        ...action.payload,\n      }\n    }\n  },\n})\n\n// Action creators are generated for each case reducer function\nexport const { setWeekInvoiceData, setSelectedFile, setSelectedJSONFile, setCardData, setFormData, setAppData } = invoiceSlice.actions\n\nexport const selectInvoiceData = state => state.invoice.data;\nexport const selectCSVFile = state => state.invoice.file;\nexport const selectJSONFile = state => state.invoice.json;\nexport const selectCardData = state => state.invoice.cardData;\nexport const selectFormData = state => state.invoice.formData;\nexport const selectAppData = state => state.invoice.app;\n\nexport default invoiceSlice.reducer","import { createSlice } from '@reduxjs/toolkit'\n\nexport const UISlice = createSlice({\n  name: 'ui',\n  initialState: {\n    shouldEnableCardCalculation: false\n  },\n  reducers: {\n    toggleShouldEnableCardCalculation: (state) => {\n      state.shouldEnableCardCalculation = !state.shouldEnableCardCalculation;\n    },\n  },\n})\n\n// Action creators are generated for each case reducer function\nexport const { toggleShouldEnableCardCalculation } = UISlice.actions\n\nexport const selectShouldEnableCardCalculation = state => state.ui.shouldEnableCardCalculation;\n\nexport default UISlice.reducer","import moment from 'moment';\n\nexport const numberWithCommas = (x) => {\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\nexport const getWeeksInRange = (start, end, startDay) => {\n  const weeks = [],\n    firstDate = new Date(start),\n    lastDate = new Date(end),\n    numDays = lastDate.getDate(),\n    numDays2 = firstDate.getDate();\n\n  let dayOfWeekCounter = firstDate.getDay();\n\n  for (let date = numDays2; date <= numDays; date++) {\n    if (dayOfWeekCounter === startDay || weeks.length === 0) {\n      weeks.push([]);\n    }\n    weeks[weeks.length - 1].push(date);\n    dayOfWeekCounter = (dayOfWeekCounter + 1) % 7;\n  }\n\n  return weeks\n    .filter((w) => !!w.length)\n    .map((w) => ({\n      start: w[0],\n      end: w[w.length - 1],\n      dates: w,\n    }));\n}\n\nexport const getWeeksInRangeV2 = (start, end, startDay) => {\n  const weeks = [],\n    firstDate = moment(start),\n    lastDate = moment(end);\n    // numDays = lastDate.getDate(),\n    // numDays2 = firstDate.getDate();\n\n  let dayOfWeekCounter = firstDate.day();\n\n  for (let date = firstDate; moment(date.startOf('day')).isSameOrBefore(lastDate.startOf('day')); date=date.add(1, 'days')) {\n    if (dayOfWeekCounter === startDay || weeks.length === 0) {\n      weeks.push([]);\n    }\n    weeks[weeks.length - 1].push(date.toDate());\n    dayOfWeekCounter = (dayOfWeekCounter + 1) % 7;\n  }\n\n  return weeks\n    .filter((w) => !!w.length)\n    .map((w) => ({\n      start: w[0],\n      end: w[w.length - 1],\n      dates: w,\n    }));\n}\n\nexport const getTimeFromSecondsHHMM = (seconds) => {\n  const hoursFromSeconds = parseInt(seconds / 3600)\n  const minutesFromSecond = moment.utc(parseInt((seconds - hoursFromSeconds * 3600)) * 1000).format('mm')\n  const time = hoursFromSeconds + ':' + minutesFromSecond;\n  return time\n}\n\nexport const getSecondsFromTimeHHMM = (time) => {\n  const timeArray = time.split(':');\n  const secondsFromHours = Number(timeArray[0]) * 3600;\n  const secondsFromMinutes = Number(timeArray[1]) * 60;\n  const timeInSeconds = secondsFromHours + secondsFromMinutes;\n  return timeInSeconds;\n}\n\nexport const zeroPad = (num, size) => {\n  var s = String(num);\n  while (s.length < (size || 2)) { s = \"0\" + s; }\n  return s;\n}\n\nexport const getNextDayOfTheWeek = (dayName,excludeToday = true,refDate = new Date()) => {\n  const dayOfWeek = [\"sun\", \"mon\", \"tue\", \"wed\", \"thu\", \"fri\", \"sat\"]\n    .indexOf(dayName.slice(0, 3).toLowerCase());\n  if (dayOfWeek < 0) return;\n  refDate.setHours(0, 0, 0, 0);\n  refDate.setDate(refDate.getDate() + +!!excludeToday +\n    (dayOfWeek + 7 - refDate.getDay() - +!!excludeToday) % 7);\n  return refDate;\n}\n\nexport const getNumbersInRangeAsArray = (start, end, difference) => {\n  const array = [];\n  for (let i = start; i <= end + difference; i = i + difference) {\n    array.push(i)\n  }\n  return array\n}","import { createRef, useEffect, useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { Table, Dropdown, Input, Label, Icon, Button } from 'semantic-ui-react'\nimport { selectInvoiceData, setWeekInvoiceData } from \"../../../store/invoiceSlice\"\nimport { selectShouldEnableCardCalculation } from \"../../../store/UISlice\"\nimport { getNumbersInRangeAsArray } from '../../../utils/functions'\n\nconst TableRow = ({ data, no, name, setHourlyRate, onChangeHoursWorked, activeItem, cardData, deleteWorkerData, invoiceDataKeys }) => {\n\n  const showCardColumns = useSelector(selectShouldEnableCardCalculation)\n\n\tconst [hoursWorked, setHoursWorked] = useState(data.hoursWorked)\n\tconst [isHoursWorkedValid, setIsHoursWorkedValid] = useState(true)\n\tconst [shouldEdit, setShoudEdit] = useState(false)\n\tconst [isWorkerExist, setIsWorkerExist] = useState(false)\n\tconst [worker, setWorker] = useState({\n\t\tprevKey: name,\n\t\tnewKey: name,\n\t})\n\tconst dispatch = useDispatch()\n\n\tconst weekInvoiceData = useSelector(selectInvoiceData)\n\n\tconst editWorker = () => {\n\t\tif(worker.prevKey === worker.newKey){\n\t\t\tsetWorker({\n\t\t\t\t...worker,\n\t\t\t\tnewKey: worker.prevKey\n\t\t\t})\n\t\t\tsetShoudEdit(false)\n\t\t} else if (isWorkerExist) {\n\t\t\talert('Worker already exist!')\n\t\t} else {\n\t\t\tconst updatedWeekInvoiceData = Object.keys(weekInvoiceData).reduce((newWeekInvoiceData, week) => {\n\t\t\t\tconst tempWeekInvoiceData = {\n\t\t\t\t\t...weekInvoiceData\n\t\t\t\t}\n\t\t\t\tconst weekData = { ...tempWeekInvoiceData[week].data }\n\t\t\t\tweekData[worker.newKey] = {\n\t\t\t\t\t...weekData[worker.prevKey],\n\t\t\t\t\tworker: worker.newKey\n\t\t\t\t}\n\t\t\t\tdelete weekData[worker.prevKey]\n\t\t\t\treturn {\n\t\t\t\t\t...newWeekInvoiceData,\n\t\t\t\t\t[week]: {\n\t\t\t\t\t\t...tempWeekInvoiceData[week],\n\t\t\t\t\t\tdata: weekData\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, {})\n\t\t\tconsole.log({ updatedWeekInvoiceData })\n\t\t\tdispatch(setWeekInvoiceData(updatedWeekInvoiceData))\n\t\t\tsetShoudEdit(false)\n\t\t\talert('Worker name updated!')\n\t\t}\n\t}\n\n\tconst inputRef = createRef()\n\n\tuseEffect(() => {\n\t\tsetHoursWorked(data.hoursWorked)\n\t}, [data])\n\n\treturn <Table.Row style={{ textAlign: 'center' }}>\n\t\t<Table.Cell >{no}</Table.Cell>\n\t\t<Table.Cell style={{ textAlign: 'left' }}>\n\t\t\t{\n\t\t\t\tshouldEdit ? <Input error={isWorkerExist} type='text' placeholder='Worker'>\n\t\t\t\t\t<input value={worker.newKey} onChange={(e) => {\n\t\t\t\t\t\tsetIsWorkerExist((invoiceDataKeys.includes(e.target.value) ? true : false) && worker.prevKey !== e.target.value )\n\t\t\t\t\t\tsetWorker({\n\t\t\t\t\t\t\t...worker,\n\t\t\t\t\t\t\tnewKey: e.target.value\n\t\t\t\t\t\t})\n\t\t\t\t\t}} /><Button style={{ backgroundColor: 'transparent' }} onClick={editWorker} icon='check' /><Button style={{ backgroundColor: 'transparent' }} onClick={() => {\n\t\t\t\t\t\tsetWorker({\n\t\t\t\t\t\t\t...worker,\n\t\t\t\t\t\t\tnewKey: worker.prevKey\n\t\t\t\t\t\t})\n\t\t\t\t\t\tsetShoudEdit(false)\n\t\t\t\t\t}} icon='cancel' />\n\t\t\t\t</Input> : <>{data.worker } <Button style={{backgroundColor: 'transparent'}} onClick={() => setShoudEdit(true)} icon='pencil alternate' /></>\n\t\t\t}\n\n\t\t</Table.Cell>\n\t\t{activeItem !== 'Total' && (<Table.Cell>\n\t\t\t<Input type='text' error={!isHoursWorkedValid} {...(data.hoursWorked !== hoursWorked) && { labelPosition: 'left' }} placeholder='Amount'>\n\t\t\t\t<input ref={inputRef} style={{ width: 100 }} value={hoursWorked} onChange={(e) => {\n\t\t\t\t\t\t// if (data.hoursWorked === e.target.value) {\n\t\t\t\t\t\t// \tsetIsHoursWorkedValid(true)\n\t\t\t\t\t\t// }\n\t\t\t\t\tconst hoursWorked = e.target.value;\n\t\t\t\t\tsetHoursWorked(hoursWorked)\n\t\t\t\t\tconst pattern = /^\\d+:[0-5][0-9]$/\n\t\t\t\t\tconst isValid = pattern.test(hoursWorked)\n\t\t\t\t\tif (isValid) {\n\t\t\t\t\t\tonChangeHoursWorked(name, hoursWorked)\n\t\t\t\t\t\tsetIsHoursWorkedValid(true)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsetIsHoursWorkedValid(false)\n\t\t\t\t\t}\n\t\t\t\t\t}} />\n\t\t\t\t{/* {(data.hoursWorked !== hoursWorked) && <Label onClick={() => {\n\t\t\t\t\tconst pattern = /^\\d+:[0-5][0-9]$/\n\t\t\t\t\tconst isValid = pattern.test(hoursWorked)\n\t\t\t\t\tif (isValid) {\n\t\t\t\t\t\tonChangeHoursWorked(name, hoursWorked)\n\t\t\t\t\t\tsetIsHoursWorkedValid(true)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsetIsHoursWorkedValid(false)\n\t\t\t\t\t}\n\t\t\t\t\t}} basic style={{cursor: 'pointer'}}>Save</Label>} */}\n\t\t\t\t</Input>\n\t\t\t</Table.Cell>\n\t\t)}\n\t\t<Table.Cell>{data.hoursBilled}</Table.Cell>\n\t\t{/* <td>{hours}</td> */}\n\t\t<Table.Cell>\n\t\t\t<Dropdown\n\t\t\t\tsearch\n\t\t\t\tonChange={(e, data) => {\n\t\t\t\t\tsetHourlyRate(name, Number(data.value))\n\t\t\t\t}}\n\t\t\t\tvalue={data.hourlyRate.toFixed(2)}\n\t\t\t\tfluid\n\t\t\t\tselection\n\t\t\t\toptions={getNumbersInRangeAsArray(1, 25, 0.01).map((number) => ({\n\t\t\t\t\tkey: number.toFixed(2),\n\t\t\t\t\tvalue: number.toFixed(2),\n\t\t\t\t\ttext: '$'+number.toFixed(2)\n\t\t\t\t}))}\n\t\t\t/>\n\t\t\t{/* <Input type='text' {...(data.hourlyRate !== hourlyRate) && { labelPosition: 'left' }} placeholder='Amount'>\n\t\t\t\t<input style={{ textAlign: 'center' }} value={hoursWorked} onChange={(e) => {\n\t\t\t\t\tsetHourlyRate\n\t\t\t\t}} />\n\t\t\t\t{(data.hoursWorked !== hoursWorked) && <Label onClick={() => {\n\t\t\t\t\tonChangeHoursWorked(name, hoursWorked)\n\t\t\t\t}} basic>Save</Label>}\n\t\t\t</Input> */}\n\t\t</Table.Cell>\n\t\t<Table.Cell>${data.totalInUSD.toFixed(2)}</Table.Cell>\n\t\t{\n\t\t\tshowCardColumns && (\n\t\t\t\t<>\n\t\t\t\t\t<Table.Cell textAlign='center'>{cardData?.total?.cardTotal || '--'}</Table.Cell>\n\t\t\t\t\t<Table.Cell textAlign='center'>{(cardData?.role === 'Team Member' ? cardData?.total?.average?.asTeamMember : cardData?.total?.average?.asQAPerson) || '--'}</Table.Cell>\n\t\t\t\t</>\n\t\t\t)\n\t\t}\n\t\t<Table.Cell><Button onClick={() => deleteWorkerData(name) } icon='trash' /></Table.Cell>\n\t\t</Table.Row>\n}\n\nexport { TableRow }","import { TableRow } from \"../TableRow\"\nimport { Button, Dropdown, Form, Input, Table } from 'semantic-ui-react'\nimport stringSimilarity from 'string-similarity';\nimport { getNumbersInRangeAsArray } from \"../../../utils/functions\";\nimport { useState } from \"react\";\nimport moment from 'moment'\nimport { useSelector } from \"react-redux\";\nimport { selectShouldEnableCardCalculation } from \"../../../store/UISlice\";\n\nconst TableBody = ({ invoiceData, setHourlyRate, total, onChangeHoursWorked, activeItem, cardData, addWorkerData, deleteWorkerData }) => {\n\n\n\tconst showCardColumns = useSelector(selectShouldEnableCardCalculation)\n\n\tconst getBestMatch = (key) => {\n\t\tvar matches = stringSimilarity.findBestMatch(key, Object.keys(cardData) || Object.key(invoiceData));\n\t\treturn matches?.bestMatch?.rating > 0.6 ? matches?.bestMatch?.target : key\n\t}\n\n\tconst initialWorkerData = {\n\t\thourlyRate: 1,\n\t\tworker: '',\n\t\thours: 0,\n\t\thoursBilled: '00:00',\n\t\thoursWorked: '',\n\t\ttimeWorked: 0,\n\t\ttotalInUSD: 1,\n\t}\n\tconst [isHoursWorkedValid, setIsHoursWorkedValid] = useState(true)\n\tconst [isWorkerExist, setIsWorkerExist] = useState(false)\n\tconst [workerData, setWorkerData] = useState(initialWorkerData)\n\n\tconst updateWorkerData = (data) => setWorkerData(state => ({\n\t\t...state,\n\t\t...data,\n\t}))\n\n\tconst addWorker = () => {\n\t\tif (isWorkerExist) {\n\t\t\talert('Worker already exist')\n\t\t} else if (!isHoursWorkedValid) {\n\t\t\talert('Invalid time(Hours Worked)')\n\t\t} else {\n\t\t\taddWorkerData(workerData.worker, workerData)\n\t\t\tsetWorkerData(initialWorkerData)\n\t\t}\n\t}\n\n\treturn (\n\t\t\t<>\n\t\t<Table.Body>\n\t\t\t{\n\t\t\t\tObject\n\t\t\t\t\t\t.keys(invoiceData)\n\t\t\t\t\t\t.sort()\n\t\t\t\t\t\t.map((key, index) => {\n\t\t\t\t\t\t\tconst hasCardData = cardData && Object.keys(cardData).length > 0;\n\t\t\t\t\t\tconst cardKey = hasCardData ? getBestMatch(key) : key\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<TableRow\n\t\t\t\t\t\t\t\tactiveItem={activeItem}\n\t\t\t\t\t\t\t\tonChangeHoursWorked={onChangeHoursWorked}\n\t\t\t\t\t\t\t\tsetHourlyRate={setHourlyRate}\n\t\t\t\t\t\t\t\tkey={key}\n\t\t\t\t\t\t\t\tname={key}\n\t\t\t\t\t\t\t\tdeleteWorkerData={deleteWorkerData}\n\t\t\t\t\t\t\t\tdata={invoiceData[key]}\n\t\t\t\t\t\t\t\tinvoiceDataKeys={Object.keys(invoiceData)}\n\t\t\t\t\t\t\t\tno={index + 1}\n\t\t\t\t\t\t\t\tcardData={cardData && cardData[cardKey] || {}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\t{\n\t\t\t\t\tactiveItem !== 'Total' && <Table.Row textAlign='center'>\n\t\t\t\t\t\t<Table.Cell></Table.Cell>\n\t\t\t\t\t\t<Table.Cell>\n\t\t\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t\t\t<Input style={{ width: '100%' }} error={isWorkerExist} type='text' placeholder='Worker'>\n\t\t\t\t\t\t\t\t\t<input value={workerData.worker} onChange={(e) => {\n\t\t\t\t\t\t\t\t\t\tsetIsWorkerExist(Object.keys(invoiceData).includes(e.target.value) ? true : false)\n\t\t\t\t\t\t\t\t\t\tupdateWorkerData({ worker: e.target.value })\n\t\t\t\t\t\t\t\t\t}} />\n\t\t\t\t\t\t\t\t</Input>\n\t\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t\t</Table.Cell>\n\t\t\t\t\t\t<Table.Cell>\n\t\t\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t\t\t<Input error={!isHoursWorkedValid} type='text' placeholder='Hours Worked'>\n\t\t\t\t\t\t\t\t\t<input style={{ width: '100%' }} value={workerData.hoursWorked} onChange={(e) => {\n\t\t\t\t\t\t\t\t\t\tconst pattern = /^\\d+:[0-5][0-9]$/\n\t\t\t\t\t\t\t\t\t\tconst isValid = pattern.test(e.target.value)\n\t\t\t\t\t\t\t\t\t\tif (isValid) {\n\t\t\t\t\t\t\t\t\t\t\tconst splittedTime = e.target.value.split(':');\n\t\t\t\t\t\t\t\t\t\t\tconst billedMinutes = moment.utc((parseInt(splittedTime[1] / 10) * 10) * 60000).format('mm');\n\t\t\t\t\t\t\t\t\t\t\tconst hoursBilled = splittedTime[0] + ':' + billedMinutes\n\t\t\t\t\t\t\t\t\t\t\tconst hours = Number(splittedTime[0]) + Number(billedMinutes) / 60;\n\t\t\t\t\t\t\t\t\t\t\tconst totalInUSD = hours * workerData.hourlyRate;\n\t\t\t\t\t\t\t\t\t\t\tconst timeWorked = (Number(splittedTime[0]) * 60 * 60) + (Number(splittedTime[0]) * 60)\n\t\t\t\t\t\t\t\t\t\t\tupdateWorkerData({\n\t\t\t\t\t\t\t\t\t\t\t\thoursWorked: e.target.value,\n\t\t\t\t\t\t\t\t\t\t\t\thoursBilled,\n\t\t\t\t\t\t\t\t\t\t\t\ttotalInUSD,\n\t\t\t\t\t\t\t\t\t\t\t\thours,\n\t\t\t\t\t\t\t\t\t\t\t\ttimeWorked,\n\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\tsetIsHoursWorkedValid(true)\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tupdateWorkerData({ hoursWorked: e.target.value })\n\t\t\t\t\t\t\t\t\t\t\tsetIsHoursWorkedValid(false)\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t}} />\n\t\t\t\t\t\t\t\t</Input>\n\t\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t\t</Table.Cell>\n\t\t\t\t\t\t<Table.Cell>{workerData.hoursBilled}</Table.Cell>\n\t\t\t\t\t\t<Table.Cell>\n\t\t\t\t\t\t\t<Dropdown\n\t\t\t\t\t\t\t\tsearch\n\t\t\t\t\t\t\t\tonChange={(e, data) => {\n\t\t\t\t\t\t\t\t\tupdateWorkerData({\n\t\t\t\t\t\t\t\t\t\thourlyRate: Number(data.value),\n\t\t\t\t\t\t\t\t\t\ttotalInUSD: Number(data.value) * workerData.hours\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tvalue={workerData.hourlyRate.toFixed(2)}\n\t\t\t\t\t\t\t\tfluid\n\t\t\t\t\t\t\t\tselection\n\t\t\t\t\t\t\t\toptions={getNumbersInRangeAsArray(1, 25, 0.01).map((number) => ({\n\t\t\t\t\t\t\t\t\tkey: number.toFixed(2),\n\t\t\t\t\t\t\t\t\tvalue: number.toFixed(2),\n\t\t\t\t\t\t\t\t\ttext: '$' + number.toFixed(2)\n\t\t\t\t\t\t\t\t}))}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Table.Cell>\n\t\t\t\t\t\t<Table.Cell>${workerData.totalInUSD.toFixed(2)}</Table.Cell>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tshowCardColumns && (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<Table.Cell></Table.Cell>\n\t\t\t\t\t\t\t\t\t<Table.Cell></Table.Cell>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t\t<Table.Cell><Button onClick={addWorker}>Add</Button></Table.Cell>\n\t\t\t\t\t</Table.Row>\n\t\t\t\t}\n\t\t\t</Table.Body>\n\t\t\t<Table.Footer>\n\t\t\t\t\t<Table.Row>\n\t\t\t\t\t\t<Table.HeaderCell><br></br></Table.HeaderCell>\n\t\t\t\t\t<Table.HeaderCell><b>Total</b></Table.HeaderCell>\n\t\t\t\t\t{ activeItem !== 'Total' && (<Table.HeaderCell><b>{total.hoursWorked}</b></Table.HeaderCell>)}\n\t\t\t\t\t<Table.HeaderCell><b>{total.hoursBilled}</b></Table.HeaderCell>\n\t\t\t\t\t\t<Table.HeaderCell><b></b></Table.HeaderCell>\n\t\t\t\t\t<Table.HeaderCell><b>${total.usd?.toFixed(2)?.toString()}</b></Table.HeaderCell>\n\t\t\t\t\t{\n\t\t\t\t\t\tshowCardColumns && (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<Table.HeaderCell><b></b></Table.HeaderCell>\n\t\t\t\t\t\t\t\t<Table.HeaderCell><b></b></Table.HeaderCell>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t\t<Table.HeaderCell><b></b></Table.HeaderCell>\n\t\t\t\t\t</Table.Row>\n\t\t\t\t</Table.Footer>\n\t\t\t</>\n\t)\n}\n\nexport { TableBody }","import { createSlice } from '@reduxjs/toolkit'\n\nexport const projectsSlice = createSlice({\n  name: 'projects',\n  initialState: {\n    list: {}\n  },\n  reducers: {\n    storeProjects: (state, action) => {\n      state.list = action.payload;\n    },\n  },\n})\n\n// Action creators are generated for each case reducer function\nexport const { storeProjects } = projectsSlice.actions\n\nexport const selectProjects = state => state.projects.list;\n\nexport default projectsSlice.reducer","// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport { getDatabase, ref, child, get } from 'firebase/database'\nimport { getFirestore, doc, getDoc,getDocs, query, collection, where, setDoc, deleteDoc } from \"firebase/firestore\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n\tapiKey: \"AIzaSyBzyQCY01AI8nuQheTLjPXxCcgtNy82CX4\",\n\tauthDomain: \"invoice-automation-teronext.firebaseapp.com\",\n\tdatabaseURL: \"https://invoice-automation-teronext-default-rtdb.firebaseio.com\",\n\tprojectId: \"invoice-automation-teronext\",\n\tstorageBucket: \"invoice-automation-teronext.appspot.com\",\n\tmessagingSenderId: \"890668541129\",\n\tappId: \"1:890668541129:web:7b0409f948225a1ca21918\",\n\tmeasurementId: \"G-XRYFBBTF2K\"\n};\n\n// Initialize Firebase\n\nexport const useFirebase = () => {\n\tconst app = initializeApp(firebaseConfig);\n\tconst analytics = getAnalytics(app);\n\n\tconst dbRef = ref(getDatabase(app))\n\tconst fireStore = getFirestore(app)\n\n\tconst getTestData = () => get(child(dbRef, 'test'))\n\n\tconst getProjectsList = async () => getDocs(collection(fireStore, \"project\"))\n\n\tconst getUser = async (username) => getDocs(query(collection(fireStore, \"user\"), where('username', '==', username)))\n\n\tconst setProject = (id, data) => setDoc(doc(fireStore, \"project\", id), data);\n\tconst addProject = (data) => setDoc(doc(collection(fireStore, 'project')), data)\n\tconst deleteProject = (id) => deleteDoc(doc(fireStore, \"project\", id))\n\n\tconst getInvoiceAppInfo = () => getDoc(doc(fireStore, \"app\", \"invoice\"))\n\n\tconst setInvoiceAppInfo = (data) => setDoc(doc(fireStore, \"app\", \"invoice\"), data);\n\n\treturn {\n\t\tapp,\n\t\tanalytics,\n\t\tdbRef,\n\t\tfireStore,\n\t\tgetTestData,\n\t\tgetProjectsList,\n\t\tsetProject,\n\t\taddProject,\n\t\tgetUser,\n\t\tsetInvoiceAppInfo,\n\t\tdeleteProject,\n\t\tgetInvoiceAppInfo,\n\t}\n}\n","const routes = {\n  HOME: '/',\n  PROJECTS: '/proects',\n  LOGIN: '/login',\n  WEEK_INVOICE: '/week_invoice',\n  INVOICE: '/invoice',\n  MONTH_INVOICE: '/month_invoice',\n  DOWNLOAD_INVOICE: '/download_invoice'\n}\n\nexport default routes;","import { useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { Menu, Button } from 'semantic-ui-react'\nimport routes from '../constants/routes';\n\nexport const Header = () => {\n\n  const navigate = useNavigate()\n\n  const [activeItem, setActiveItem] = useState('home');\n\n  const handleItemClick = (e, { name }) => {\n    setActiveItem(name);\n    navigate(name)\n  }\n\n  const signOut = () => {\n    localStorage.removeItem('authAccess');\n    navigate('/login')\n  }\n\n  return (\n    <div style={{margin: '20px 40px'}} >\n      <h1>Invoice Automation</h1><br />\n\t\t\t<Menu size='mini'>\n        <Menu.Item\n          children='Home'\n\t\t\t\t\tname={routes.HOME}\n\t\t\t\t\tactive={activeItem === routes.HOME}\n\t\t\t\t\tonClick={handleItemClick}\n\t\t\t\t/>\n        <Menu.Item\n          children='Projects'\n          name={routes.PROJECTS}\n          active={activeItem === routes.PROJECTS}\n          onClick={handleItemClick}\n        />\n\n\t\t\t\t<Menu.Menu position='right'>\n\t\t\t\t\t{/* <Dropdown item text='Language'>\n\t\t\t\t\t\t<Dropdown.Menu>\n\t\t\t\t\t\t\t<Dropdown.Item>English</Dropdown.Item>\n\t\t\t\t\t\t\t<Dropdown.Item>Russian</Dropdown.Item>\n\t\t\t\t\t\t\t<Dropdown.Item>Spanish</Dropdown.Item>\n\t\t\t\t\t\t</Dropdown.Menu>\n\t\t\t\t\t</Dropdown> */}\n\n\t\t\t\t\t<Menu.Item>\n\t\t\t\t\t\t<span style={{ marginRight: 10 }}><b></b></span>\n\t\t\t\t\t\t<Button onClick={signOut} primary>Sign Out</Button>\n\t\t\t\t\t</Menu.Item>\n\t\t\t\t</Menu.Menu>\n      </Menu>\n    </div>\n  )\n}","import { useSelector } from \"react-redux\";\nimport { Table } from \"semantic-ui-react\";\nimport { selectShouldEnableCardCalculation } from \"../../../store/UISlice\";\n\nexport const TableHeader = ({ activeItem }) => {\n  const showCardColumns = useSelector(selectShouldEnableCardCalculation)\n  return (\n    <Table.Header>\n      <Table.Row style={{ textAlign: 'center' }}>\n        <Table.HeaderCell>#</Table.HeaderCell>\n        <Table.HeaderCell style={{ textAlign: 'left' }}>Worker</Table.HeaderCell>\n        {activeItem !== 'Total' && <Table.HeaderCell width='2' >Hours Worked</Table.HeaderCell>}\n        <Table.HeaderCell width='2' >Hours Billed</Table.HeaderCell>\n        <Table.HeaderCell width='2' >Hourly Rate</Table.HeaderCell>\n        <Table.HeaderCell width='2' >Total in USD</Table.HeaderCell>\n        {\n          showCardColumns && (\n            <>\n              <Table.HeaderCell width='2' >Number of tickets Assigned</Table.HeaderCell>\n              <Table.HeaderCell width='2' >Avg age (in working days)</Table.HeaderCell>\n            </>\n          )\n        }\n        <Table.HeaderCell></Table.HeaderCell>\n      </Table.Row>\n    </Table.Header>\n  )\n}","import DateRangePicker from '@wojtekmaj/react-daterange-picker';\nimport { createRef, useEffect, useState } from 'react';\nimport { readRemoteFile } from 'react-papaparse';\nimport moment from 'moment';\nimport 'moment-weekday-calc';\nimport './index.css';\nimport { useNavigate } from 'react-router-dom'\nimport { Button, Dropdown, Form, Input, Label, Grid, Table, Header, Icon, Segment, Menu, Accordion, Confirm, Checkbox, Message } from 'semantic-ui-react'\nimport { TableBody } from './TableBody';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectProjects, storeProjects } from '../../store/projectsSlice';\nimport { useFirebase } from '../../firebase';\nimport { Header as AppHeader } from '../../components/Header'\nimport { getSecondsFromTimeHHMM, getTimeFromSecondsHHMM, getWeeksInRange, getWeeksInRangeV2, zeroPad } from '../../utils/functions';\nimport { selectCSVFile, selectJSONFile, selectInvoiceData, setWeekInvoiceData, setSelectedFile, setSelectedJSONFile, selectCardData, setCardData, selectFormData, setFormData, setAppData } from '../../store/invoiceSlice';\nimport { render } from 'react-dom';\nimport axios from 'axios';\nimport { Version2Client } from 'jira.js';\nimport JiraApi from 'jira-client';\nimport { TableHeader } from './TableHeader';\nimport routes from '../../constants/routes';\nimport { current } from '@reduxjs/toolkit';\nimport { selectShouldEnableCardCalculation, toggleShouldEnableCardCalculation } from '../../store/UISlice';\nimport { JIRA_CONNECTOR_URL } from '../../constants/app';\n\n\nconst client = new Version2Client({\n\thost: 'https://anshad.atlassian.net',\n\tauthentication: {\n\t\tbasic: {\n\t\t\temail: 'muhammad.anshad@teronext.com',\n\t\t\tpassword: '9645542515@Teronext'\n\t\t},\n\t},\n});\n\nconst Home = () => {\n\n\tconst navigate = useNavigate()\n\n\tuseEffect(() => {\n\t\tconst authAccess = localStorage.getItem('authAccess')\n\t\tif (!authAccess) {\n\t\t\tnavigate('/login')\n\t\t}\n\t}, [])\n\n\tconst { getTestData, getProjectsList, getInvoiceAppInfo } = useFirebase()\n\tconst projects = useSelector(selectProjects)\n\tconst weekInvoiceData = useSelector(selectInvoiceData)\n\tconst cardData = useSelector(selectCardData)\n\tconst selectedFile = useSelector(selectCSVFile)\n\tconst selectedJSONFile = useSelector(selectJSONFile)\n\tconst formData = useSelector(selectFormData)\n  const shouldEnableCardCalculation = useSelector(selectShouldEnableCardCalculation)\n\tconsole.log({\n\t\tweekInvoiceData\n\t})\n\n\tconst documentRef = createRef();\n\tconst jsonRef = createRef();\n\n\tconst [from, setFrom] = useState('Teronext Consulting\\nA3 Alsa Woodbine Line Road\\nThycaud Trivandrum\\nKerala India\\n\\n\\nPh: +91 7907 881 319\\nPayment method - via Remote.com')\n\tconst [to, setTo] = useState('')\n\tconst [data, setData] = useState([]);\n\tconst [project, setProject] = useState(Object.keys(projects)[0] || '');\n\tconst [balance, setBalance] = useState(0)\n\tconst [nextMonthEstimate, setNextMonthEstimate] = useState(0)\n\tconst [minDate, setMinDate] = useState();\n\tconst [activeItem, setActiveItem] = useState('Week1')\n\tconst [maxDate, setMaxDate] = useState();\n\tconst [invoiceMode, setInvoiceMode] = useState('week')\n\tconst [invoiceNumber, setInvoiceNumber] = useState(0)\n\tconst [deleteData, setDeleteData] = useState({\n\t\tshow: false,\n\t\tkey: null,\n\t})\n\n\t// const {\n\t// \tto,\n\t// } = formData\n\n\t// const setTo = (data) => dispatch(setFormData({to: data}))\n\n\tconst dispatch = useDispatch()\n\tconst [dateRange, setDateRange] = useState([new Date(), new Date()]);\n\tconst [sprintDateRange, setSprintDateRange] = useState([new Date(), new Date()]);\n\tconst [sprints, setSprints] = useState();\n\n\tuseEffect(() => {\n\t\t// getTestData().then(r => console.log({ r: r.val() }))\n\t}, [])\n\n\tconst handleItemClick = (e, { name }) => setActiveItem(name)\n\n\tuseEffect(() => {\n\t\tgetProjectsList().then(r => {\n\t\t\tconst projects = r.docs.reduce((_projects, doc) => ({\n\t\t\t\t..._projects,\n\t\t\t\t[doc.id]: doc.data(),\n\t\t\t}), {})\n\t\t\tdispatch(storeProjects(projects))\n\t\t\tsetProject(Object.keys(projects)[0] || '')\n\t\t})\n\t}, [])\n\n\tuseEffect(() => {\n\t\tgetInvoiceAppInfo().then(docSnap => {\n\t\t\tif (docSnap.exists()) {\n\t\t\t\tsetInvoiceNumber(Number(docSnap\n\t\t\t\t\t.data().last_invoice_number) + 1)\n\t\t\t\tdispatch(setAppData(docSnap.data()))\n\t\t\t} else {\n\t\t\t\t// doc.data() will be undefined in this case\n\t\t\t}\n\t\t})\n\t}, [])\n\n\tconst hideDeleteConfirm = () => setDeleteData(state => ({\n\t\t...state,\n\t\tshow: false,\n\t}))\n\tconst deleteWorkerDataConfirm = (name) => {\n\t\tsetDeleteData({\n\t\t\tshow: true,\n\t\t\tkey: name,\n\t\t})\n\t}\n\n\tconst addWorkerData = (key, data) => {\n\n\t\tconst updatedInvoiceData = {\n\t\t\t...weekInvoiceData[activeItem].data,\n\t\t\t[key]: {\n\t\t\t\t...weekInvoiceData[activeItem].data[key],\n\t\t\t\t...data\n\t\t\t}\n\t\t}\n\t\tconst total = getTotal(updatedInvoiceData);\n\t\tconst updatedWeekInvoiceData = {\n\t\t\t...weekInvoiceData,\n\t\t\t[activeItem]: {\n\t\t\t\t...weekInvoiceData[activeItem],\n\t\t\t\tdata: updatedInvoiceData,\n\t\t\t\ttotal,\n\t\t\t}\n\t\t}\n\t\tfindAndSaveTotalInvoiceData(updatedWeekInvoiceData)\n\t\talert('Added worker data successfully')\n\t}\n\tconst deleteWorkerData = () => {\n\t\tconst updatedInvoiceData = Object.keys(weekInvoiceData[activeItem].data).filter(item => item !== deleteData.key).reduce((_updatedInvoiceData, key) => ({\n\t\t\t..._updatedInvoiceData,\n\t\t\t[key]: weekInvoiceData[activeItem].data[key]\n\t\t}), {})\n\t\tconst total = getTotal(updatedInvoiceData);\n\t\tconst updatedWeekInvoiceData = {\n\t\t\t...weekInvoiceData,\n\t\t\t[activeItem]: {\n\t\t\t\t...weekInvoiceData[activeItem],\n\t\t\t\tdata: updatedInvoiceData,\n\t\t\t\ttotal,\n\t\t\t}\n\t\t}\n\t\tfindAndSaveTotalInvoiceData(updatedWeekInvoiceData)\n\t\tsetDeleteData({ show: false })\n\t\talert('deleted successfully!')\n\t}\n\n\tconst onChangeHoursWorked = (key, time) => {\n\t\tconst splittedTime = time.split(':');\n\t\tconst billedMinutes = moment.utc((parseInt(splittedTime[1] / 10) * 10) * 60000).format('mm');\n\t\tconst hoursBilled = splittedTime[0] + ':' + billedMinutes\n\t\tconst hours = Number(splittedTime[0]) + Number(billedMinutes) / 60;\n\t\tconst totalInUSD = hours * weekInvoiceData[activeItem].data[key].hourlyRate;\n\t\tconst updatedInvoiceData = {\n\t\t\t...weekInvoiceData[activeItem].data,\n\t\t\t[key]: {\n\t\t\t\t...weekInvoiceData[activeItem].data[key],\n\t\t\t\thoursWorked: time,\n\t\t\t\thoursBilled,\n\t\t\t\thours,\n\t\t\t\ttotalInUSD\n\t\t\t}\n\t\t}\n\t\tconst total = getTotal(updatedInvoiceData);\n\t\tconst updatedWeekInvoiceData = {\n\t\t\t...weekInvoiceData,\n\t\t\t[activeItem]: {\n\t\t\t\t...weekInvoiceData[activeItem],\n\t\t\t\tdata: updatedInvoiceData,\n\t\t\t\ttotal,\n\t\t\t}\n\t\t}\n\t\tfindAndSaveTotalInvoiceData(updatedWeekInvoiceData)\n\t}\n\tconst setHourlyRate = (key, rate) => {\n\t\tconst updatedWeekInvoiceData = Object.keys(weekInvoiceData).reduce((_updatedWeekInvoiceData, weekKey) => {\n\t\t\tconst updatedInvoiceData = {\n\t\t\t\t...weekInvoiceData[weekKey].data,\n\t\t\t\t...(!!weekInvoiceData[weekKey]?.data[key] && {\n\t\t\t\t\t[key]: {\n\t\t\t\t\t\t...weekInvoiceData[weekKey].data[key],\n\t\t\t\t\t\thourlyRate: rate,\n\t\t\t\t\t\ttotalInUSD: rate * weekInvoiceData[weekKey]?.data[key]?.hours || 0\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t\tconst total = getTotal(updatedInvoiceData)\n\t\t\treturn {\n\t\t\t\t..._updatedWeekInvoiceData,\n\t\t\t\t[weekKey]: {\n\t\t\t\t\t...weekInvoiceData[weekKey],\n\t\t\t\t\tdata: updatedInvoiceData,\n\t\t\t\t\ttotal,\n\t\t\t\t}\n\t\t\t}\n\t\t}, {})\n\n\t\tdispatch(setWeekInvoiceData(updatedWeekInvoiceData))\n\t}\n\n\tconst getTotal = (invoiceData) => {\n\t\tconst hoursWorkedArray = Object.values(invoiceData).map(item => item.hoursWorked);\n\t\tconst totalHoursWorked = hoursWorkedArray.reduce((total, hoursWorked) => {\n\t\t\tconst totalInSeconds = getSecondsFromTimeHHMM(total)\n\t\t\tconst hoursWorkedInSeconds = getSecondsFromTimeHHMM(hoursWorked);\n\t\t\tconst newTotalInSeconds = totalInSeconds + hoursWorkedInSeconds;\n\t\t\tconst newTotal = getTimeFromSecondsHHMM(newTotalInSeconds)\n\t\t\treturn newTotal\n\t\t}, '00:00')\n\t\tconst hoursBilledArray = Object.values(invoiceData).map(item => item.hoursBilled);\n\t\tconst totalHoursBilled = hoursBilledArray.reduce((total, hoursBilled) => {\n\t\t\tconst totalInSeconds = getSecondsFromTimeHHMM(total)\n\t\t\tconst hoursWorkedInSeconds = getSecondsFromTimeHHMM(hoursBilled);\n\t\t\tconst newTotalInSeconds = totalInSeconds + hoursWorkedInSeconds;\n\t\t\tconst newTotal = getTimeFromSecondsHHMM(newTotalInSeconds)\n\t\t\treturn newTotal\n\t\t}, '00:00')\n\t\tconst totalInUSDArray = Object.values(invoiceData).map(item => item.totalInUSD);\n\t\tconst totalInUSD = totalInUSDArray.reduce((total, usd) => total + Number(usd), 0)\n\t\treturn ({\n\t\t\thoursWorked: totalHoursWorked,\n\t\t\thoursBilled: totalHoursBilled,\n\t\t\tusd: totalInUSD\n\t\t})\n\t}\n\tconst getInvoiceData = (start, end) => {\n\t\tconst dataInRange = data.filter(item => {\n\t\t\tconst startTime = new Date(item.start_time);\n\t\t\tconst isInRange = moment(startTime).isBetween(moment(start).startOf('day'), moment(end).endOf('day'));\n\t\t\treturn isInRange\n\t\t})\n\t\tconst workers = dataInRange.reduce((_workers, item) => {\n\t\t\tconst formattedKey = (item.workers || '').toLowerCase().replace(/(^\\w{1})|(\\s+\\w{1})/g, letter => letter.toUpperCase())\n\t\t\tif (Object.keys(_workers).includes(formattedKey)) {\n\t\t\t\treturn {\n\t\t\t\t\t..._workers,\n\t\t\t\t\t[formattedKey]: [\n\t\t\t\t\t\t..._workers[formattedKey],\n\t\t\t\t\t\titem\n\t\t\t\t\t]\n\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn {\n\t\t\t\t\t..._workers,\n\t\t\t\t\t[formattedKey]: [item]\n\t\t\t\t}\n\t\t\t}\n\t\t}, {})\n\t\tconst invoiceData = Object.keys(workers).reduce((_invoiceData, key) => {\n\t\t\tconst workersData = workers[key];\n\t\t\tconst worker = key;\n\t\t\tconst totalDurationInseconds = workersData.reduce((total, item) => total + (parseInt(item.duration_seconds)), 0)\n\t\t\tconst hoursFromSeconds = parseInt(Number(totalDurationInseconds) / 3600)\n\t\t\tconst minutesFromSecond = moment.utc(parseInt((totalDurationInseconds - hoursFromSeconds * 3600)) * 1000).format('mm')\n\t\t\tconst hoursWorked = hoursFromSeconds + ':' + minutesFromSecond\n\t\t\tconst flooredMinutes = parseInt(minutesFromSecond / 10) * 10;\n\t\t\tconst hoursBilled = hoursFromSeconds + ':' + moment.utc(flooredMinutes * 60000).format('mm');\n\t\t\tconst hours = (hoursFromSeconds + flooredMinutes / 60);\n\t\t\treturn {\n\t\t\t\t..._invoiceData,\n\t\t\t\t[key]: {\n\t\t\t\t\tworker,\n\t\t\t\t\ttimeWorked: totalDurationInseconds,\n\t\t\t\t\thoursWorked,\n\t\t\t\t\thoursBilled,\n\t\t\t\t\thours,\n\t\t\t\t\thourlyRate: 1,\n\t\t\t\t\ttotalInUSD: hours,\n\t\t\t\t}\n\t\t\t}\n\t\t}, {})\n\t\tconst total = getTotal(invoiceData)\n\t\treturn ({\n\t\t\tdata: invoiceData,\n\t\t\ttotal,\n\t\t\tstart: start.toISOString(),\n\t\t\tend: end.toISOString(),\n\t\t})\n\t}\n\n\tconst findAndSaveTotalInvoiceData = (weekInvoiceData) => {\n\t\tconst invoiceMerged = Object.keys(weekInvoiceData).filter(item => item !== 'Total').reduce((_invoiceMerged, key) => {\n\t\t\tconst invoice = weekInvoiceData[key];\n\t\t\treturn [\n\t\t\t\t..._invoiceMerged,\n\t\t\t\t...Object.keys(invoice.data).map((key) => invoice.data[key])\n\t\t\t]\n\t\t}, [])\n\n\t\tconst invoiceByWorkers = invoiceMerged.reduce((_invoiceByWorkers, item) => {\n\n\t\t\tif (Object.keys(_invoiceByWorkers).includes(item.worker)) {\n\t\t\t\treturn {\n\t\t\t\t\t..._invoiceByWorkers,\n\t\t\t\t\t[item.worker]: [\n\t\t\t\t\t\t..._invoiceByWorkers[item.worker],\n\t\t\t\t\t\titem.hoursBilled\n\t\t\t\t\t]\n\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn {\n\t\t\t\t\t..._invoiceByWorkers,\n\t\t\t\t\t[item.worker]: [item.hoursBilled]\n\t\t\t\t}\n\t\t\t}\n\t\t}, {})\n\t\tconst totalInvoice = Object.keys(invoiceByWorkers).reduce((_totalInvoice, key) => {\n\t\t\tconst hoursWorkedArray = invoiceByWorkers[key];\n\t\t\tconst totalSeconds = hoursWorkedArray.reduce((total, time) => {\n\t\t\t\tconst seconds = getSecondsFromTimeHHMM(time)\n\t\t\t\treturn total + seconds\n\t\t\t}, 0)\n\t\t\tconst hoursWorked = getTimeFromSecondsHHMM(totalSeconds)\n\t\t\tconst splittedTime = hoursWorked.split(':');\n\t\t\t// const billedMinutes = parseInt(splittedTime[1] / 10) * 10;\n\t\t\tconst billedMinutes = moment.utc((parseInt(splittedTime[1] / 10) * 10) * 60000).format('mm');\n\t\t\tconst hoursBilled = splittedTime[0] + ':' + billedMinutes\n\t\t\tconst hours = Number(splittedTime[0]) + Number(billedMinutes) / 60;\n\t\t\tconst totalInUSD = hours * 1;\n\t\t\tconst updatedInvoiceData = {\n\t\t\t\t..._totalInvoice,\n\t\t\t\t[key]: {\n\t\t\t\t\tworker: key,\n\t\t\t\t\ttimeWorked: totalSeconds,\n\t\t\t\t\thoursWorked,\n\t\t\t\t\thoursBilled,\n\t\t\t\t\thours,\n\t\t\t\t\ttotalInUSD,\n\t\t\t\t\thourlyRate: 1,\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn updatedInvoiceData\n\t\t}, {})\n\t\tconst total = getTotal(totalInvoice)\n\t\tdispatch(setWeekInvoiceData({\n\t\t\t...weekInvoiceData,\n\t\t\tTotal: {\n\t\t\t\tdata: totalInvoice,\n\t\t\t\ttotal,\n\t\t\t\tstart: minDate?.toISOString(),\n\t\t\t\tend: maxDate?.toISOString(),\n\t\t\t}\n\t\t}))\n\t}\n\n\tuseEffect(() => {\n\t\tconst weeks = getWeeksInRange(new Date(dateRange[0]), new Date(dateRange[1]), 1)\n\t\tconst weeks2 = getWeeksInRangeV2(new Date(dateRange[0]), new Date(dateRange[1]), 1)\n\t\tconst weeksInvoice = weeks2.reduce((_weeksInvoice, week, index) => {\n\t\t\treturn {\n\t\t\t\t..._weeksInvoice,\n\t\t\t\t['Week' + (index + 1)]: getInvoiceData(week.start, week.end)\n\t\t\t}\n\t\t}, {})\n\n\n\t\tconst weeks2Sprint = weeks2.reduce((_sprints, week, index) => {\n\n\t\t\tconst start = moment(week.start).day(3).subtract(1, 'weeks').format('YYYY/MM/DD');\n\t\t\tconst end = moment(week.start).day(3).format('YYYY/MM/DD');\n\t\t\tif (moment(week.start).weekday() === 0) {\n\t\t\t\treturn {\n\t\t\t\t\t..._sprints,\n\t\t\t\t\t['Week' + (index + 1)]: {\n\t\t\t\t\t\tstart: moment(week.start).subtract(1, 'weeks').day(3).subtract(1, 'weeks').format('YYYY/MM/DD'),\n\t\t\t\t\t\tend: moment(week.start).subtract(1, 'weeks').day(3).format('YYYY/MM/DD')\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (moment(week.start).weekday() > 3) {\n\t\t\t\treturn {\n\t\t\t\t\t..._sprints,\n\t\t\t\t\t['Week' + (index + 1)]: {\n\t\t\t\t\t\tstart: moment(week.start).day(3).subtract(1, 'weeks').format('YYYY/MM/DD'),\n\t\t\t\t\t\tend: moment(week.start).day(3).format('YYYY/MM/DD')\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (moment(week.end).weekday() < 3 && moment(week.end).weekday() !== 0) {\n\t\t\t\treturn {\n\t\t\t\t\t..._sprints,\n\t\t\t\t\t['Week' + (index + 1)]: {\n\t\t\t\t\t\tstart: moment(week.start).subtract(1, 'weeks').day(3).subtract(1, 'weeks').format('YYYY/MM/DD'),\n\t\t\t\t\t\tend: moment(week.start).subtract(1, 'weeks').day(3).format('YYYY/MM/DD')\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (moment(week.start).weekday() < 3 && (moment(week.end).weekday() >= 3 || moment(week.end).weekday() === 0)) {\n\t\t\t\treturn {\n\t\t\t\t\t..._sprints,\n\t\t\t\t\t['Week' + (index + 1)]: {\n\t\t\t\t\t\tstart: moment(week.start).day(3).subtract(1, 'weeks').format('YYYY/MM/DD'),\n\t\t\t\t\t\tend: moment(week.start).day(3).format('YYYY/MM/DD')\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// if (moment(end).isSameOrBefore(moment(dateRange[1]).format('YYYY/MM/DD')) ) {\n\t\t\t// \treturn {\n\t\t\t// \t\t..._sprints,\n\t\t\t// \t\t['Week' + (index + 1)]: {\n\t\t\t// \t\t\tstart,\n\t\t\t// \t\t\tend,\n\t\t\t// \t\t}\n\t\t\t// \t}\n\t\t\t// }\n\t\t\treturn {\n\t\t\t\t..._sprints,\n\t\t\t\t['Week' + (index + 1)]: {\n\t\t\t\t\tstart: null,\n\t\t\t\t\tend: null,\n\t\t\t\t}\n\t\t\t}\n\t\t}, {})\n\n\n\t\tsetSprints(weeks2Sprint)\n\n\t\tdispatch(setWeekInvoiceData(weeksInvoice))\n\n\t\tfindAndSaveTotalInvoiceData(weeksInvoice)\n\t\t// setSprintDateRange([\n\t\t// \tmoment(dateRange[0]).day(3).subtract(1, 'weeks').format('YYYY/MM/DD'),\n\t\t// \tmoment(dateRange[0]).day(3).format('YYYY/MM/DD'),\n\t\t// ])\n\t}, [dateRange])\n\n\n\tconst onChangeDateRange = (range) => {\n\t\tsetDateRange(range)\n\t}\n\n\tuseEffect(() => {\n\t\tif (selectedFile) {\n\t\t\tconst url = URL.createObjectURL(selectedFile)\n\t\t\treadRemoteFile(url, {\n\t\t\t\theader: true,\n\t\t\t\tskipEmptyLines: true,\n\t\t\t\tcomplete: ({ data }) => {\n\t\t\t\t\tsetData(data)\n\t\t\t\t\tconst dates = data.map(item => moment(item.start_time))\n\t\t\t\t\tsetMinDate(moment.min(dates).startOf('day').toDate())\n\t\t\t\t\tsetMaxDate(moment.max(dates).endOf('day').toDate())\n\t\t\t\t\tsetDateRange([moment.min(dates).startOf('day').toDate(), moment.max(dates).endOf('day').toDate()])\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}, [selectedFile])\n\n\t// const readJsonFileText = async () => {\n\t// \tconst text = await selectedJSONFile.text()\n\t// \treturn JSON.parse(text)\n\t// }\n\n\tconst getCardTotal = (cardData) => Object.values(\n\t\tcardData\n\t).reduce((_result, value, index) => {\n\t\treturn {\n\t\t\t..._result,\n\t\t\t...Object.keys(value).reduce((_cards, key) => {\n\t\t\t\tif (Object.keys(_result).includes(key)) {\n\t\t\t\t\tconst cardTotal = (value[key].total?.cardTotal || 0) + (_result[key].total?.cardTotal || 0);\n\t\t\t\t\tconst totalDays = {\n\t\t\t\t\t\tasTeamMember: value[key]?.total?.totalDays?.asTeamMember + _result[key]?.total?.totalDays?.asTeamMember,\n\t\t\t\t\t\tasQAPerson: value[key]?.total?.totalDays?.asQAPerson + _result[key]?.total?.totalDays?.asQAPerson\n\t\t\t\t\t}\n\t\t\t\t\tconst average = {\n\t\t\t\t\t\tasTeamMember: (Number(totalDays.asTeamMember) / Number(cardTotal)).toFixed(1),\n\t\t\t\t\t\tasQAPerson: (Number(totalDays.asQAPerson) / Number(cardTotal)).toFixed(1)\n\t\t\t\t\t\t// asTeamMember: ((Number(value[key]?.total?.average?.asTeamMember).toFixed(1) + Number(_result[key]?.total?.average?.asTeamMember).toFixed(1)) / 2).toFixed(1),\n\t\t\t\t\t\t// asQAPerson: ((Number(value[key]?.total?.average?.asQAPerson).toFixed(1) + Number(_result[key]?.total?.average?.asQAPerson).toFixed(1)) / 2).toFixed(1)\n\t\t\t\t\t}\n\t\t\t\t\treturn {\n\t\t\t\t\t\t..._cards,\n\t\t\t\t\t\t[key]: {\n\t\t\t\t\t\t\tcards: [...(_result[key]?.cards || []), ...(value[key]?.cards || [])],\n\t\t\t\t\t\t\trole: value[key].role,\n\t\t\t\t\t\t\ttotal: {\n\t\t\t\t\t\t\t\tcardTotal,\n\t\t\t\t\t\t\t\ttotalDays,\n\t\t\t\t\t\t\t\taverage\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t..._cards,\n\t\t\t\t\t\t[key]: value[key]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, {})\n\t\t}\n\t}, {})\n\n\tuseEffect(() => {\n\t\tif (selectedJSONFile && selectedJSONFile[activeItem]) {\n\t\t\tselectedJSONFile[activeItem]?.text()?.then(text => {\n\t\t\t\tconst jsonData = JSON.parse(text)\n\t\t\t\tconst jsonDataByAssignee = jsonData\n\t\t\t\tconst cardDataTemp = Object.keys(jsonDataByAssignee).reduce((_cardData, key) => {\n\t\t\t\t\tconst assignedIssues = jsonDataByAssignee[key] || [];\n\t\t\t\t\tconst assignedIssuesFiltered = assignedIssues.filter(item => !!item);\n\t\t\t\t\tconst cards = assignedIssuesFiltered.map(item => {\n\t\t\t\t\t\tconst cardName = item.key;\n\t\t\t\t\t\tconst histories = item.changelog.histories;\n\t\t\t\t\t\tconst getDate = (status) => {\n\n\t\t\t\t\t\t\tlet index = 0;\n\t\t\t\t\t\t\tlet date = histories.find(item => item.items[0].toString.toUpperCase() === status[index])?.created;\n\t\t\t\t\t\t\twhile (!!!date && index + 1 < status.length) {\n\t\t\t\t\t\t\t\tindex = index + 1\n\t\t\t\t\t\t\t\tdate = histories.find(item => item.items[0].toString.toUpperCase() === status[index])?.created;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn date\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet todoDate = histories.find(item => (item.items[0].toString.toUpperCase() === 'IN PROGRESS' || item.items[0].field === 'Parent' || item.items[0].field === 'assignee'))?.created;\n\n\t\t\t\t\t\tconst actualToDoDate = todoDate;\n\n\t\t\t\t\t\tif (sprints && sprints[activeItem] && moment(todoDate).isBefore(sprints[activeItem].start)) {\n\t\t\t\t\t\t\ttodoDate = sprints[activeItem].start\n\t\t\t\t\t\t} else if (sprints && sprints[activeItem] && moment(todoDate).isAfter(sprints[activeItem].end)) {\n\t\t\t\t\t\t\ttodoDate = sprints[activeItem].end\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// const inQADate = histories.find(item => item.items[0].toString.toUpperCase() === 'IN PEER REVIEW' || item.items[0].toString.toUpperCase() === 'NEEDS QA' || item.items[0].toString.toUpperCase() === 'IN QA' || item.items[0].toString.toUpperCase() === 'DONE')?.created;\n\t\t\t\t\t\tlet inPeerReview = getDate([\n\t\t\t\t\t\t\t'IN PEER REVIEW',\n\t\t\t\t\t\t\t'NEEDS QA',\n\t\t\t\t\t\t\t'IN QA',\n\t\t\t\t\t\t\t'IN DEV',\n\t\t\t\t\t\t\t'DONE'\n\t\t\t\t\t\t]);\n\t\t\t\t\t\tconst actualInPeerReview = inPeerReview\n\t\t\t\t\t\tif (!inPeerReview || moment(moment(inPeerReview).format('YYYY/MM/DD')).isBefore(moment(todoDate).format('YYYY/MM/DD'))) {\n\t\t\t\t\t\t\tinPeerReview = todoDate\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (sprints && sprints[activeItem] && moment(inPeerReview).isBefore(sprints[activeItem].start)) {\n\t\t\t\t\t\t\tinPeerReview = sprints[activeItem].start\n\t\t\t\t\t\t} else if (sprints && sprints[activeItem] && moment(inPeerReview).isAfter(sprints[activeItem].end)) {\n\t\t\t\t\t\t\tinPeerReview = sprints[activeItem].end\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet inQADate = getDate([\n\t\t\t\t\t\t\t'IN QA',\n\t\t\t\t\t\t\t'QA PASSED',\n\t\t\t\t\t\t\t'READY FOR STAGING',\n\t\t\t\t\t\t\t'IN STAGING',\n\t\t\t\t\t\t\t'IN DEV',\n\t\t\t\t\t\t\t'DONE'\n\t\t\t\t\t\t]);\n\t\t\t\t\t\tconst actualInQADate = inQADate\n\t\t\t\t\t\tif (!inQADate || moment(moment(inQADate).format('YYYY/MM/DD')).isBefore(moment(inPeerReview).format('YYYY/MM/DD'))) {\n\t\t\t\t\t\t\tinQADate = inPeerReview\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (sprints && sprints[activeItem] && moment(inQADate).isBefore(sprints[activeItem].start)) {\n\t\t\t\t\t\t\tinQADate = sprints[activeItem].start\n\t\t\t\t\t\t} else if (sprints && sprints[activeItem] && moment(inQADate).isAfter(sprints[activeItem].end)) {\n\t\t\t\t\t\t\tinQADate = sprints[activeItem].end\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// const inStagingDate = histories.find(item => item.items[0].toString.toUpperCase() === 'QA PASSED' || item.items[0].toString.toUpperCase() === 'IN STAGING' || item.items[0].toString.toUpperCase() === 'READY FOR STAGING' || item.items[0].toString.toUpperCase() === 'DONE')?.created;\n\t\t\t\t\t\tlet inStagingDate = getDate([\n\t\t\t\t\t\t\t'QA PASSED',\n\t\t\t\t\t\t\t'READY FOR STAGING',\n\t\t\t\t\t\t\t'IN STAGING',\n\t\t\t\t\t\t\t'IN DEV',\n\t\t\t\t\t\t\t'DONE'\n\t\t\t\t\t\t])\n\t\t\t\t\t\tconst actualInStagingDate = inStagingDate\n\t\t\t\t\t\tif (!inStagingDate) {\n\t\t\t\t\t\t\tinStagingDate = inQADate\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (sprints && sprints[activeItem] && moment(inStagingDate).isBefore(sprints[activeItem].start)) {\n\t\t\t\t\t\t\tinStagingDate = sprints[activeItem].start\n\t\t\t\t\t\t} else if (sprints && sprints[activeItem] && moment(inStagingDate).isAfter(sprints[activeItem].end)) {\n\t\t\t\t\t\t\tinStagingDate = sprints[activeItem].end\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\tconst noOfDaysWorkedAsTeamMember = moment()?.isoWeekdayCalc({\n\t\t\t\t\t\t\trangeStart: todoDate,\n\t\t\t\t\t\t\trangeEnd: inPeerReview,\n\t\t\t\t\t\t\tweekdays: [1, 2, 3, 4, 5], //weekdays Mon to Fri\n\t\t\t\t\t\t})\n\t\t\t\t\t\tconst noOfDaysWorkedAsQAPerson = moment()?.isoWeekdayCalc({\n\t\t\t\t\t\t\trangeStart: inQADate,\n\t\t\t\t\t\t\trangeEnd: inStagingDate,\n\t\t\t\t\t\t\tweekdays: [1, 2, 3, 4, 5], //weekdays Mon to Fri\n\t\t\t\t\t\t})\n\t\t\t\t\t\treturn { cardName, todoDate, inPeerReview, inQADate, inStagingDate, noOfDaysWorkedAsQAPerson, noOfDaysWorkedAsTeamMember, actualInPeerReview, actualInQADate, actualInStagingDate, actualToDoDate }\n\t\t\t\t\t})\n\t\t\t\t\tconst cardTotal = cards.length\n\n\t\t\t\t\tconst totalDays = cards.reduce((_totalDays, card) => ({\n\t\t\t\t\t\tasTeamMember: _totalDays.asTeamMember + card.noOfDaysWorkedAsTeamMember,\n\t\t\t\t\t\tasQAPerson: _totalDays.asQAPerson + card.noOfDaysWorkedAsQAPerson,\n\t\t\t\t\t}), { asTeamMember: 0, asQAPerson: 0 })\n\n\t\t\t\t\tconst average = {\n\t\t\t\t\t\tasTeamMember: (Number(totalDays.asTeamMember) / Number(cardTotal)).toFixed(1),\n\t\t\t\t\t\tasQAPerson: (Number(totalDays.asQAPerson) / Number(cardTotal)).toFixed(1)\n\t\t\t\t\t}\n\t\t\t\t\tconst role = 'Team Member';\n\t\t\t\t\treturn {\n\t\t\t\t\t\t..._cardData,\n\t\t\t\t\t\t[key]: {\n\t\t\t\t\t\t\tcards,\n\t\t\t\t\t\t\trole,\n\t\t\t\t\t\t\ttotal: {\n\t\t\t\t\t\t\t\tcardTotal,\n\t\t\t\t\t\t\t\ttotalDays,\n\t\t\t\t\t\t\t\taverage,\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}, {})\n\n\t\t\t\tconst updatedCardData = {\n\t\t\t\t\t...cardData,\n\t\t\t\t\t[activeItem]: cardDataTemp\n\t\t\t\t}\n\t\t\t\tdelete updatedCardData.Total\n\n\t\t\t\tconst cardsTotal = getCardTotal(updatedCardData)\n\n\t\t\t\t// const Total = Object.keys(cardDataTemp).filter(key => key !== Total).reduce((_total, key, index) => {\n\t\t\t\t// \tconst cardDataSingleWeek = cardDataTemp[key]\n\n\t\t\t\t// }, {})\n\t\t\t\tdispatch(setCardData(\n\t\t\t\t\t{\n\t\t\t\t\t\t...updatedCardData,\n\t\t\t\t\t\tTotal: cardsTotal,\n\t\t\t\t\t}\n\t\t\t\t))\n\t\t\t})\n\t\t}\n\t}, [selectedJSONFile, sprintDateRange])\n\n\tuseEffect(() => {\n\n\t}, [cardData])\n\n\tuseEffect(() => {\n\t\tif (project && projects[project]) {\n\t\t\tif (invoiceMode === 'week') {\n\t\t\t\tsetTo(projects[project].weekly_invoice_address)\n\t\t\t\tsetBalance(projects[project].week_balance)\n\t\t\t\tsetActiveItem('Week1')\n\t\t\t} else if (invoiceMode === 'month') {\n\t\t\t\tsetTo(projects[project].monthly_invoice_address)\n\t\t\t\tsetBalance(projects[project].month_balance)\n\t\t\t\tsetActiveItem('Total')\n\t\t\t}\n\t\t}\n\t}, [invoiceMode, project])\n\n\tconst isInvoiceModeMonth = (invoiceMode === 'month')\n\tconst isInvoiceModeWeek = (invoiceMode === 'week')\n\n\tconst renderGenerateInvoiceButton = () => {\n\t\tconst invoice = isInvoiceModeMonth ? weekInvoiceData?.Total : weekInvoiceData[activeItem];\n\t\tconst invoiceData = invoice?.data || {}\n\t\tconst total = invoice?.total || {}\n\t\tconst zeroPaddedInvoiceNumber = zeroPad(Number(invoiceNumber), 4)\n\t\tconst projectName = projects[project]?.name\n\t\tconst endBalance = (Number(balance) - Number(total?.usd?.toFixed(2)))?.toFixed(2)\n\t\tconst dates = [invoice?.start, invoice?.end]\n\t\tconst state = {\n\t\t\tnextMonthEstimate,\n\t\t\tinvoiceMode,\n\t\t\tinvoiceData,\n\t\t\tfrom,\n\t\t\tto,\n\t\t\tdates,\n\t\t\tstartBalance: balance,\n\t\t\tendBalance,\n\t\t\tinvoiceNumber: zeroPaddedInvoiceNumber,\n\t\t\ttotal,\n\t\t\tproject: {\n\t\t\t\tname: projectName,\n\t\t\t\tkey: project,\n\t\t\t},\n\t\t\tcardData: cardData[activeItem],\n\t\t}\n\n\t\t// const navigateToInvoice = () => navigate('/week_invoice', {\n\t\t// \tstate\n\t\t// });\n\t\tconst navigateToInvoice = () => navigate(routes.INVOICE, {\n\t\t\tstate\n\t\t});\n\n\t\treturn selectedFile && (\n\t\t\t// <Button onClick={navigateToInvoice} color='blue' size='medium'>Generate Invoice</Button>\n\t\t\t<Button onClick={navigateToInvoice} color='blue' size='medium'>Generate Invoice</Button>\n\t\t)\n\t}\n\n\tconst renderDownloadInvoiceButton = () => {\n\t\tconst invoice = isInvoiceModeMonth ? weekInvoiceData?.Total : weekInvoiceData[activeItem];\n\t\tconst invoiceData = invoice?.data || {}\n\t\tconst total = invoice?.total || {}\n\t\tconst zeroPaddedInvoiceNumber = zeroPad(Number(invoiceNumber), 4)\n\t\tconst projectName = projects[project]?.name\n\t\tconst endBalance = (Number(balance) - Number(total?.usd?.toFixed(2)))?.toFixed(2)\n\t\tconst dates = [invoice?.start, invoice?.end]\n\t\tconst state = {\n\t\t\tnextMonthEstimate,\n\t\t\tinvoiceMode,\n\t\t\tinvoiceData,\n\t\t\tfrom,\n\t\t\tto,\n\t\t\tdates,\n\t\t\tstartBalance: balance,\n\t\t\tendBalance,\n\t\t\tinvoiceNumber: zeroPaddedInvoiceNumber,\n\t\t\ttotal,\n\t\t\tproject: projectName,\n\t\t\tcardData: cardData[activeItem],\n\t\t}\n\n\t\tconst navigateToInvoice = () => navigate('/download_invoice', {\n\t\t\tstate\n\t\t});\n\n\t\treturn selectedFile && (\n\t\t\t<Button onClick={navigateToInvoice} color='blue' size='medium'>Download Invoice</Button>\n\t\t)\n\t}\n\n\tconst renderTableSegment = () => {\n\t\tconst header = `Invoice #${zeroPad(Number(invoiceNumber), 4)}`;\n\t\tconst period = `${moment(weekInvoiceData[activeItem]?.start).format('MMMM D ,YYYY ')} through ${moment(weekInvoiceData[activeItem]?.end).format('MMMM D ,YYYY ')}`\n\t\tconst total = weekInvoiceData[activeItem]?.total || {}\n\t\tconst invoiceData = weekInvoiceData[activeItem]?.data || {}\n\t\treturn (\n\t\t\t<Segment>\n\t\t\t\t<Header as='h5'>\n\t\t\t\t\t{header}\n\t\t\t\t</Header>\n\t\t\t\t<Header as='h5'>\n\t\t\t\t\tPeriod: {period}\n\t\t\t\t</Header>\n\t\t\t\t<Table celled striped>\n\t\t\t\t\t<TableHeader activeItem={activeItem} />\n\t\t\t\t\t<TableBody\n\t\t\t\t\t\tactiveItem={activeItem}\n\t\t\t\t\t\tonChangeHoursWorked={onChangeHoursWorked}\n\t\t\t\t\t\tdata={data}\n\t\t\t\t\t\ttotal={total}\n\t\t\t\t\t\taddWorkerData={addWorkerData}\n\t\t\t\t\t\tdeleteWorkerData={deleteWorkerDataConfirm}\n\t\t\t\t\t\tinvoiceData={invoiceData}\n\t\t\t\t\t\tsetHourlyRate={setHourlyRate}\n\t\t\t\t\t\tcardData={cardData[activeItem]}\n\t\t\t\t\t/>\n\t\t\t\t</Table>\n\t\t\t</Segment>\n\t\t)\n\t}\n\n\tconst onClickFileInput = () => documentRef.current.click()\n\tconst onClickJSONFileInput = () => jsonRef.current.click()\n\n\tconst renderFileInput = () => {\n\t\tif (selectedFile) {\n\t\t\treturn (\n\t\t\t\t<div style={{ marginBottom: 20 }}>\n\t\t\t\t\t<Button as='div' labelPosition='left'>\n\t\t\t\t\t\t<Label as='a' basic pointing='right'>\n\t\t\t\t\t\t\t{selectedFile.name}\n\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t<Button onClick={onClickFileInput} icon>\n\t\t\t\t\t\t\tChange\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\t\tconst buttonText = !selectedFile ? 'Add a .csv file' : 'Change document';\n\t\tconst content = selectedFile?.name || 'Upload TopTracker Report';\n\t\treturn (\n\t\t\t<div className='csv-selector'>\n\t\t\t\t<Segment placeholder>\n\t\t\t\t\t<Header icon>\n\t\t\t\t\t\t<Icon name='file alternate outline' />\n\t\t\t\t\t\t{content}\n\t\t\t\t\t</Header>\n\t\t\t\t\t<Button onClick={onClickFileInput} primary> {buttonText}</Button>\n\t\t\t\t</Segment>\n\t\t\t</div>\n\t\t)\n\t}\n\n\tconst onDeleteJSONFile = () => {\n\t\tconst tempCardData = { ...cardData };\n\t\tdelete tempCardData[activeItem];\n\t\tdelete tempCardData.Total;\n\t\tconst tempSelectedJSONFile = { ...selectedJSONFile };\n\t\tdelete tempSelectedJSONFile[activeItem];\n\t\tdispatch(setSelectedJSONFile(tempSelectedJSONFile))\n\n\n\t\tconst cardsTotal = getCardTotal(tempCardData)\n\t\tdispatch(setCardData(\n\t\t\t{\n\t\t\t\t...tempCardData,\n\t\t\t\tTotal: cardsTotal,\n\t\t\t}\n\t\t))\n\t}\n\n\tconst renderJSONFileInput = () => {\n\t\tif (activeItem !== 'Total') {\n\t\t\tif (selectedJSONFile && selectedJSONFile[activeItem]) {\n\t\t\t\treturn (\n\t\t\t\t\t<div style={{ marginBottom: 20, width: '100%', display: 'flex', justifyContent: 'space-between' }}>\n\t\t\t\t\t\t<Button as='div' labelPosition='left'>\n\t\t\t\t\t\t\t<Label as='a' basic pointing='right'>\n\t\t\t\t\t\t\t\t{selectedJSONFile[activeItem].name}\n\t\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t\t<Button positive onClick={onClickJSONFileInput} icon>\n\t\t\t\t\t\t\t\tChange\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button negative onClick={onDeleteJSONFile} icon>\n\t\t\t\t\t\t\tRemove\n\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t}\n\t\t\tconst buttonText = !selectedJSONFile || !selectedJSONFile[activeItem] ? 'Add a .json file' : 'Change .json file';\n\t\t\tconst content = !selectedJSONFile || selectedJSONFile[activeItem]?.name || 'Upload Jira data';\n\t\t\treturn (\n\t\t\t\t<div className='csv-selector'>\n\t\t\t\t\t<Segment placeholder>\n\t\t\t\t\t\t<Header icon>\n\t\t\t\t\t\t\t<Icon name='file code outline' />\n\t\t\t\t\t\t\t{content}\n\t\t\t\t\t\t</Header>\n\t\t\t\t\t\t<Button onClick={onClickJSONFileInput} primary> {buttonText}</Button>\n\t\t\t\t\t</Segment>\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\t}\n\n\tconst renderWeeksTabsMenu = () => isInvoiceModeMonth && (\n\t\t<Menu color='blue' secondary className='menu'>\n\t\t\t{((Object.keys(weekInvoiceData) || []).map((key, index) => {\n\t\t\t\treturn (\n\t\t\t\t\t<Menu.Item\n\t\t\t\t\t\tname={key}\n\t\t\t\t\t\tactive={activeItem === key}\n\t\t\t\t\t\tchildren={key}\n\t\t\t\t\t\tonClick={handleItemClick}\n\t\t\t\t\t/>\n\t\t\t\t)\n\t\t\t}))}\n\t\t</Menu>\n\t)\n\n\tconst hasWeekInvoice = (Object.keys(weekInvoiceData).length > 0)\n\tconst showTabsAndTable = (selectedFile && weekInvoiceData && hasWeekInvoice)\n\tconst renderInvoiceTabsAndTable = () => showTabsAndTable && (\n\t\t<div>\n\t\t\t{renderWeeksTabsMenu()}\n\t\t\t{renderTableSegment()}\n\t\t</div>\n\t)\n\n\tconst onChangeFile = (e) => {\n\t\tif (e.target.files.length > 0) {\n\t\t\tdispatch(setSelectedFile(e.target.files[0]));\n\t\t\tjsonRef.current.value = \"\";\n\t\t}\n\t}\n\tconst onChangeJSONFile = (e) => {\n\t\tif (e.target.files.length > 0) {\n\t\t\tdispatch(setSelectedJSONFile({\n\t\t\t\t...selectedJSONFile,\n\t\t\t\t[activeItem]: e.target.files[0]\n\t\t\t}))\n\t\t\tjsonRef.current.value = '';\n\t\t}\n\t}\n\n\tconst renderHiddenFileInput = () => (\n\t\t<input hidden onChange={onChangeFile} accept='.csv' ref={documentRef} type='file' />\n\t)\n\n\tconst renderHiddenJSONFileInput = () => (\n\t\t<input hidden onChange={onChangeJSONFile} accept='.json' ref={jsonRef} type='file' />\n\t)\n\n\tconst renderSelectWeekDropdown = () => {\n\t\tconst onChangeActiveItem = (e, data) => setActiveItem(data.value)\n\t\tconst weekKeys = Object.keys(weekInvoiceData)\n\t\tconst weekOptions = weekKeys.filter(key => key !== 'Total').map(key => {\n\t\t\tconst startDate = moment(weekInvoiceData[key].start).format('DD/MM/YY')\n\t\t\tconst endDate = moment(weekInvoiceData[key].end).format('DD/MM/YY')\n\t\t\tconst text = `${key}: ${startDate} - ${endDate}`\n\t\t\treturn ({\n\t\t\t\tkey,\n\t\t\t\tvalue: key,\n\t\t\t\ttext,\n\t\t\t})\n\t\t})\n\t\treturn isInvoiceModeWeek && (\n\t\t\t<Form.Field>\n\t\t\t\t<label>Select Week</label>\n\t\t\t\t<Dropdown\n\t\t\t\t\tvalue={activeItem}\n\t\t\t\t\tplaceholder='Select week'\n\t\t\t\t\tselection\n\t\t\t\t\tonChange={onChangeActiveItem}\n\t\t\t\t\toptions={weekOptions} />\n\t\t\t</Form.Field>\n\t\t)\n\t}\n\n\tconst renderNextMonthEstimateInput = () => {\n\t\tconst label = `Total estimate for the month of ${moment(dateRange[0]).add(1, 'month').format('MMMM')}`\n\n\t\tconst onChangeEstimate = (e) => { setNextMonthEstimate(e.target.value) }\n\n\t\treturn invoiceMode === 'month' && (\n\t\t\t<Form.Field>\n\t\t\t\t<label>{label}</label>\n\t\t\t\t<Input labelPosition='left' type='text' placeholder='Amount'>\n\t\t\t\t\t<Label basic>$</Label>\n\t\t\t\t\t<input value={nextMonthEstimate} onChange={onChangeEstimate} />\n\t\t\t\t</Input>\n\t\t\t</Form.Field>\n\t\t)\n\t}\n\n\tconst renderInvoiceForm = () => {\n\t\tconst onChangeInvoiceNumber = (e) => setInvoiceNumber(e.target.value)\n\t\tconst onChangeProject = (e, data) => setProject(data.value)\n\t\tconst onChangeInvoiceMode = (e, data) => setInvoiceMode(data.value)\n\t\tconst onChangeStartBalance = (e) => setBalance(e.target.value)\n\t\tconst onChangeFromAddress = (e) => setFrom(e.target.value)\n\t\tconst onChangeToAddress = (e) => setTo(e.target.value)\n\n\t\tconst projectKeys = Object.keys(projects)\n\t\tconst dropdownOptions = projectKeys.map(key => ({\n\t\t\tkey,\n\t\t\tvalue: key,\n\t\t\ttext: projects[key].name\n\n\t\t}))\n\t\tconst invoiceModeOptions = [\n\t\t\t{\n\t\t\t\tkey: 'week',\n\t\t\t\tvalue: 'week',\n\t\t\t\ttext: 'Week'\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'month',\n\t\t\t\tvalue: 'month',\n\t\t\t\ttext: 'Month'\n\t\t\t},\n\t\t]\n\t\tconst startBalanceLabel = `Starting ${isInvoiceModeWeek ? 'week' : 'monthly'} balance`\n\t\tconst endBalanceLabel = `Ending ${isInvoiceModeWeek ? 'week' : 'monthly'} balance`\n\t\tconst invoice = isInvoiceModeMonth\n\t\t\t? weekInvoiceData.Total\n\t\t\t: weekInvoiceData[activeItem]\n\t\tconst endBalance = (Number(balance) - Number(invoice?.total?.usd.toFixed(2))).toFixed(2)\n\n\t\treturn (\n\t\t\t<Form>\n\t\t\t\t<Form.Field>\n\t\t\t\t\t<label>Period</label>\n\t\t\t\t\t<div id='date-range-picker'>\n\t\t\t\t\t\t<DateRangePicker\n\t\t\t\t\t\t\tonChange={onChangeDateRange}\n\t\t\t\t\t\t\tvalue={dateRange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</Form.Field>\n\t\t\t\t<Form.Field>\n\t\t\t\t\t<label>Invoice Number</label>\n\t\t\t\t\t<Input labelPosition='left' type='text' placeholder='Amount'>\n\t\t\t\t\t\t<Label basic>#</Label>\n\t\t\t\t\t\t<input value={invoiceNumber} onChange={onChangeInvoiceNumber} />\n\t\t\t\t\t</Input>\n\t\t\t\t</Form.Field>\n\t\t\t\t<Form.Field>\n\t\t\t\t\t<label>Project</label>\n\t\t\t\t\t<Dropdown value={project} placeholder='Project' search selection\n\t\t\t\t\t\tonChange={onChangeProject}\n\t\t\t\t\t\toptions={dropdownOptions} />\n\t\t\t\t</Form.Field>\n\t\t\t\t<Form.Field>\n\t\t\t\t\t<label>Invoice Mode</label>\n\t\t\t\t\t<Dropdown value={invoiceMode} placeholder='Select invoice mode' selection\n\t\t\t\t\t\tonChange={onChangeInvoiceMode}\n\t\t\t\t\t\toptions={invoiceModeOptions} />\n\t\t\t\t</Form.Field>\n\t\t\t\t{renderSelectWeekDropdown()}\n\t\t\t\t<Form.Field>\n\t\t\t\t\t<label>{startBalanceLabel}</label>\n\t\t\t\t\t<Input labelPosition='left' type='text' placeholder='Amount'>\n\t\t\t\t\t\t<Label basic>$</Label>\n\t\t\t\t\t\t<input value={balance} onChange={onChangeStartBalance} />\n\t\t\t\t\t</Input>\n\t\t\t\t</Form.Field>\n\t\t\t\t<Form.Field>\n\t\t\t\t\t<label>{endBalanceLabel}</label>\n\t\t\t\t\t<Input labelPosition='left' type='text' placeholder='Amount'>\n\t\t\t\t\t\t<Label basic>$</Label>\n\t\t\t\t\t\t<input value={endBalance} readOnly onChange={(e) => { }} />\n\t\t\t\t\t</Input>\n\t\t\t\t</Form.Field>\n\t\t\t\t{renderNextMonthEstimateInput()}\n\t\t\t\t<Form.TextArea label='From' placeholder='From Address...' value={from} onChange={onChangeFromAddress} />\n\t\t\t\t<Form.TextArea label='To' placeholder='To Address...' onChange={onChangeToAddress} value={to} />\n\t\t\t</Form>\n\t\t)\n\t}\n\n\n\tconst onChangeWorkerRole = (role, key) => {\n\t\tconst updatedCardData = {\n\t\t\t...cardData,\n\t\t\t[activeItem]: {\n\t\t\t\t...cardData[activeItem],\n\t\t\t\t[key]: {\n\t\t\t\t\t...cardData[activeItem][key],\n\t\t\t\t\trole,\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tdispatch(setCardData(updatedCardData))\n\t}\n\n\tconst [activeIndex, setActiveIndex] = useState()\n\tconst onChangeActiveIndex = (e, data) => {\n\t\tconst newIndex = (activeIndex === data.index) ? -1 : data.index\n\t\tsetActiveIndex(newIndex)\n\t}\n\tconst renderCardTables = () => cardData && cardData[activeItem] ? Object.keys(cardData[activeItem]).map((key, index) => (\n\t\t<Accordion fluid styled>\n\t\t\t<Accordion.Title\n\t\t\t\tactive={activeIndex === index}\n\t\t\t\tindex={index}\n\t\t\t\tonClick={onChangeActiveIndex}\n\t\t\t>\n\t\t\t\t<div style={{ display: 'flex', justifyContent: 'space-between' }}>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Icon name='dropdown' />\n\t\t\t\t\t\t{key}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<b>Total No of Cards: {cardData[activeItem][key]?.total?.cardTotal}</b>\n\t\t\t\t\t\t,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n\t\t\t\t\t\t<b>Average: {cardData[activeItem][key].role === 'Team Member' ? cardData[activeItem][key]?.total?.average?.asTeamMember : cardData[activeItem][key]?.total?.average?.asQAPerson}</b>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Accordion.Title>\n\t\t\t<Accordion.Content active={activeIndex === index}>\n\t\t\t\t<Table celled >\n\t\t\t\t\t<Table.Header>\n\t\t\t\t\t\t<Table.Row >\n\t\t\t\t\t\t\t<Table.HeaderCell colSpan='7'>\n\t\t\t\t\t\t\t\t<div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n\t\t\t\t\t\t\t\t\t<span>{key} :</span>\n\t\t\t\t\t\t\t\t\t<Dropdown\n\t\t\t\t\t\t\t\t\t\tonChange={(e, data) => onChangeWorkerRole(data.value, key)}\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: 200, border: 0, backgroundColor: '#f9fafb' }}\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select Role'\n\t\t\t\t\t\t\t\t\t\tfluid\n\t\t\t\t\t\t\t\t\t\tvalue={cardData[activeItem][key].role}\n\t\t\t\t\t\t\t\t\t\tselection\n\t\t\t\t\t\t\t\t\t\toptions={[\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tkey: 'Team Member',\n\t\t\t\t\t\t\t\t\t\t\t\ttext: 'Team Member',\n\t\t\t\t\t\t\t\t\t\t\t\tvalue: 'Team Member',\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tkey: 'QA Person',\n\t\t\t\t\t\t\t\t\t\t\t\ttext: 'QA Person',\n\t\t\t\t\t\t\t\t\t\t\t\tvalue: 'QA Person',\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Table.HeaderCell>\n\t\t\t\t\t\t</Table.Row>\n\t\t\t\t\t\t<Table.Row>\n\t\t\t\t\t\t\t<Table.HeaderCell textAlign='center' width='2'>\n\t\t\t\t\t\t\t\tCard No\n\t\t\t\t\t\t</Table.HeaderCell>\n\t\t\t\t\t\t\t<Table.HeaderCell>\n\t\t\t\t\t\t\t\tCard Title\n\t\t\t\t\t\t</Table.HeaderCell>\n\t\t\t\t\t\t\t<Table.HeaderCell>\n\t\t\t\t\t\t\t\tIn Progress\n\t\t\t\t\t\t</Table.HeaderCell>\n\t\t\t\t\t\t\t<Table.HeaderCell>\n\t\t\t\t\t\t\t\tIn Peer Review\n\t\t\t\t\t\t</Table.HeaderCell>\n\t\t\t\t\t\t\t<Table.HeaderCell>\n\t\t\t\t\t\t\t\tIn QA\n\t\t\t\t\t\t</Table.HeaderCell>\n\t\t\t\t\t\t\t<Table.HeaderCell>\n\t\t\t\t\t\t\t\tIn Staging\n\t\t\t\t\t\t</Table.HeaderCell>\n\t\t\t\t\t\t\t<Table.HeaderCell textAlign='center' width='3'>\n\t\t\t\t\t\t\t\tNo of Days\n\t\t\t\t\t\t</Table.HeaderCell>\n\t\t\t\t\t\t</Table.Row>\n\t\t\t\t\t</Table.Header>\n\t\t\t\t\t<Table.Body>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcardData[activeItem][key].cards?.map((card, index) => (\n\t\t\t\t\t\t\t\t<Table.Row>\n\t\t\t\t\t\t\t\t\t<Table.Cell textAlign='center'>\n\t\t\t\t\t\t\t\t\t\t{index + 1}\n\t\t\t\t\t\t\t\t\t</Table.Cell>\n\t\t\t\t\t\t\t\t\t<Table.Cell>\n\t\t\t\t\t\t\t\t\t\t{card.cardName}\n\t\t\t\t\t\t\t\t\t</Table.Cell>\n\t\t\t\t\t\t\t\t\t<Table.Cell>\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tmoment(card.todoDate).format('DD/MM/YYYY')\n\t\t\t\t\t\t\t\t\t\t\t//moment(card.todoDate).format('DD/MM/YYYY') + '\\n' + moment(card.actualToDoDate).format('DD/MM/YYYY')\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t</Table.Cell>\n\t\t\t\t\t\t\t\t\t<Table.Cell>\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t//moment(card.inPeerReview).format('DD/MM/YYYY') + '\\n' + moment(card.actualInPeerReview).format('DD/MM/YYYY')\n\t\t\t\t\t\t\t\t\t\t\tmoment(card.inPeerReview).format('DD/MM/YYYY')\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t</Table.Cell>\n\t\t\t\t\t\t\t\t\t<Table.Cell>\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tmoment(card.inQADate).format('DD/MM/YYYY')\n\t\t\t\t\t\t\t\t\t\t\t//moment(card.inQADate).format('DD/MM/YYYY') + '\\n' + moment(card.actualInQADate).format('DD/MM/YYYY')\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t</Table.Cell>\n\t\t\t\t\t\t\t\t\t<Table.Cell>\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tmoment(card.inStagingDate).format('DD/MM/YYYY')\n\t\t\t\t\t\t\t\t\t\t\t// moment(card.inStagingDate).format('DD/MM/YYYY') + '\\n' + moment(card.actualInStagingDate).format('DD/MM/YYYY')\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t</Table.Cell>\n\t\t\t\t\t\t\t\t\t<Table.Cell textAlign='center'>\n\t\t\t\t\t\t\t\t\t\t{cardData[activeItem][key].role === 'Team Member' ? card.noOfDaysWorkedAsTeamMember : card.noOfDaysWorkedAsQAPerson}\n\t\t\t\t\t\t\t\t\t</Table.Cell>\n\t\t\t\t\t\t\t\t</Table.Row>\n\t\t\t\t\t\t\t))\n\t\t\t\t\t\t}\n\t\t\t\t\t</Table.Body>\n\t\t\t\t\t<Table.Footer>\n\t\t\t\t\t\t<Table.Row>\n\t\t\t\t\t\t\t<Table.HeaderCell>\n\t\t\t\t\t\t\t\t<b></b>\n\t\t\t\t\t\t\t</Table.HeaderCell>\n\t\t\t\t\t\t\t<Table.HeaderCell>\n\t\t\t\t\t\t\t\t<b>Total No of Cards: {cardData[activeItem][key]?.total?.cardTotal}</b>\n\t\t\t\t\t\t\t</Table.HeaderCell>\n\t\t\t\t\t\t\t<Table.HeaderCell>\n\t\t\t\t\t\t\t</Table.HeaderCell>\n\t\t\t\t\t\t\t<Table.HeaderCell>\n\t\t\t\t\t\t\t</Table.HeaderCell>\n\t\t\t\t\t\t\t<Table.HeaderCell>\n\t\t\t\t\t\t\t</Table.HeaderCell>\n\t\t\t\t\t\t\t<Table.HeaderCell>\n\t\t\t\t\t\t\t</Table.HeaderCell>\n\t\t\t\t\t\t\t<Table.HeaderCell>\n\t\t\t\t\t\t\t\t<b>Total No of Days: {cardData[activeItem][key].role === 'Team Member' ? cardData[activeItem][key]?.total?.totalDays?.asTeamMember : cardData[activeItem][key]?.total?.totalDays?.asQAPerson}</b>\n\t\t\t\t\t\t\t</Table.HeaderCell>\n\n\t\t\t\t\t\t</Table.Row>\n\t\t\t\t\t\t<Table.Row>\n\t\t\t\t\t\t\t<Table.HeaderCell>\n\t\t\t\t\t\t\t</Table.HeaderCell>\n\t\t\t\t\t\t\t<Table.HeaderCell>\n\t\t\t\t\t\t\t</Table.HeaderCell>\n\t\t\t\t\t\t\t<Table.HeaderCell>\n\t\t\t\t\t\t\t</Table.HeaderCell>\n\t\t\t\t\t\t\t<Table.HeaderCell>\n\t\t\t\t\t\t\t</Table.HeaderCell>\n\t\t\t\t\t\t\t<Table.HeaderCell>\n\t\t\t\t\t\t\t</Table.HeaderCell>\n\t\t\t\t\t\t\t<Table.HeaderCell>\n\t\t\t\t\t\t\t\t<b></b>\n\t\t\t\t\t\t\t</Table.HeaderCell>\n\t\t\t\t\t\t\t<Table.HeaderCell>\n\t\t\t\t\t\t\t\t<b>Average: {cardData[activeItem][key].role === 'Team Member' ? cardData[activeItem][key]?.total?.average?.asTeamMember : cardData[activeItem][key]?.total?.average?.asQAPerson}</b>\n\t\t\t\t\t\t\t</Table.HeaderCell>\n\t\t\t\t\t\t</Table.Row>\n\t\t\t\t\t</Table.Footer>\n\t\t\t\t</Table>\n\t\t\t</Accordion.Content>\n\t\t</Accordion>\n\t)) : (renderNoCardDetailsWarning())\n\n\tconst renderNoCardDetailsWarning = () => activeItem === 'Total' && (\n\t\t<Message warning>\n\t\t\t<Message.Header>No details found!</Message.Header>\n\t\t\t<p>Please upload card details for all the weeks.</p>\n\t\t</Message>\n\t)\n\n\tconst renderCardSection = () => shouldEnableCardCalculation && (\n\t\t<Segment>\n\t\t\t{sprints && activeItem !== 'Total' && (<Header as='h5'>\n\t\t\t\tSprint: {`${sprints[activeItem]?.start || '--'} : ${sprints[activeItem]?.end || '--'}`}\n\t\t\t</Header>)}\n\t\t\t{renderJSONFileInput()}\n\t\t\t{renderCardTables()}\n\t\t</Segment>\n\t)\n\n\tconst renderDeleteConfirm = () => (\n\t\t<Confirm\n\t\t\topen={deleteData.show}\n\t\t\tcontent={<div style={{padding: 30, fontSize: 16}}>Are you sure you want to delete <b>{deleteData.key} </b>from the list? </div>}\n\t\t\tonCancel={hideDeleteConfirm}\n\t\t\tonConfirm={deleteWorkerData}\n\t\t/>\n\t)\n\tconst renderCardCalculationToggle = () => (\n\t\t<div style={{display: 'flex',  alignItems: 'center', justifyContent: 'space-between'}}>\n\t\t\t<span style={{ alignItems: 'center', display: 'flex'}}><span style={{ paddingRight: 10}}>Enable card calculation</span>\n\t\t\t<Checkbox onClick={(e, data) => {\n\t\t\t\tdispatch(toggleShouldEnableCardCalculation())\n\t\t\t\t}} toggle checked={shouldEnableCardCalculation} /></span>\n\t\t\t{shouldEnableCardCalculation && (\n\t\t\t\t<span>\n\t\t\t\t\t<a href={JIRA_CONNECTOR_URL} target='_blank' >Open Jira Connector</a>\n\t\t\t\t</span>\n\t\t\t)}\n\t\t</div>\n\t)\n\treturn (\n\t\t<>\n\t\t\t<AppHeader />\n\t\t\t<div className=\"home-container\">\n\t\t\t\t{renderDeleteConfirm()}\n\t\t\t\t<Grid>\n\t\t\t\t\t<Grid.Column mobile={16} tablet={5} computer={5}>\n\t\t\t\t\t\t{renderInvoiceForm()}\n\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t<Grid.Column mobile={16} tablet={11} computer={11}>\n\t\t\t\t\t\t{renderHiddenFileInput()}\n\t\t\t\t\t\t{renderHiddenJSONFileInput()}\n\n\t\t\t\t\t\t{renderFileInput()}\n\t\t\t\t\t\t{renderInvoiceTabsAndTable()}\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t{renderCardCalculationToggle()}\n\t\t\t\t\t\t{renderCardSection()}\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t{renderGenerateInvoiceButton()}\n\t\t\t\t\t</Grid.Column>\n\t\t\t\t</Grid>\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nexport { Home }","export const JIRA_CONNECTOR_URL = 'https://invoice-automation.bubbleapps.io/version-test';","import { useLocation } from 'react-router-dom';\nimport moment from 'moment';\nimport './index.css'\nimport { createRef, useEffect} from 'react';\n// import HTMLToDOCX from 'html-to-docx';\nimport { numberWithCommas } from '../../utils/functions';\nimport jsPDF from 'jspdf';\nimport { Table } from 'semantic-ui-react';\nimport stringSimilarity from 'string-similarity';\n\nconst WeekInvoice = () => {\n\tconst { state } = useLocation()\n  const divRef = createRef();\n\n  const bucket = `$ ${Number(state.endBalance) * -1}`\n\n  const endBalance = `$ ${Number(state.endBalance)}`\n\n  const doc = new jsPDF()\n  const totalPayable = (Number(state.nextMonthEstimate) - Number(state.endBalance)).toFixed(2)\n\n\n\tconst getBestMatch = (key, array) => {\n\t\tvar matches = stringSimilarity.findBestMatch(key, array);\n\t\treturn matches?.bestMatch?.rating > 0.6 ? matches?.bestMatch?.target : key\n\t}\n\treturn (\n\t\t<div ref={divRef} >\n\n\n\t\t<div style={{ width: 816, margin: '20px auto', minHeight: 1054 }} >\n\t\t\t<br />\n\t\t\t\t{\n\t\t\t\t\t(state.invoiceMode === 'week') ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\tfontSize: 18,\n\t\t\t\t\t\t\t\tfontFamily: 'Arial',\n\t\t\t\t\t\t\t\tmarginBottom: 18,\n\t\t\t\t\t\t\t\tfontWeight: 900,\n\t\t\t\t\t\t\t}}>Invoice #{state.invoiceNumber}</div><br />\n\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\tfontSize: 18,\n\t\t\t\t\t\t\t\tfontFamily: 'Arial',\n\t\t\t\t\t\t\t\tmarginBottom: 15,\n\t\t\t\t\t\t\t\tfontWeight: 900,\n\t\t\t\t\t\t\t}}>Period: {moment(state.dates[0]).format('MMMM D ,YYYY ')} through {moment(state.dates[1]).format('MMMM D ,YYYY ')}</div>\n\t\t\t\t\t\t</>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\tfontSize: 18,\n\t\t\t\t\t\t\tfontFamily: 'Arial',\n\t\t\t\t\t\t\tmarginBottom: 15,\n\t\t\t\t\t\t\tfontWeight: 900,\n              }}>Invoice #{state.invoiceNumber} - {moment(state.dates[0]).format('MMMM').toUpperCase()} {moment(state.dates[0]).format('YYYY')}</div>\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t<br />\n\t\t\t<table width={815} border={1}cellSpacing={0} cellPadding={10} className=''>\n\t\t\t\t<tbody style={{\n\t\t\t\t\tverticalAlign: 'top',\n\t\t\t\t\twhiteSpace: 'pre-wrap',\n\t\t\t\t\ttextAlign: 'left'\n\t\t\t\t}}>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th style={{width: '50%'}}>From</th>\n\t\t\t\t\t\t<th style={{width: '50%'}}>To</th>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>{state.from}</td>\n\t\t\t\t\t\t<td>{state.to}</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t\t<br />\n\t\t\t<table width={815} border={1} cellSpacing={0} cellPadding={5} className=''>\n\t\t\t\t<tbody style={{\n\t\t\t\t\ttextAlign: 'left'\n\t\t\t\t}}>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th style={{ width: 200 }}>{`Starting ${state?.invoiceMode==='week' ? 'week' : 'monthly' } balance`}</th>\n              <td>$ {numberWithCommas(Number(state.startBalance).toFixed(2))}</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th style={{width: 200}}>{`Ending ${state?.invoiceMode==='week' ? 'week' : 'monthly' } balance`}</th>\n              <td>{numberWithCommas(endBalance)}</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t\t<br />\n\t\t\t<div>\n\t\t\t\tWork Log - {state.project}\n\t\t\t</div>\n\t\t\t<br />\n\t\t\t<table width={815} border={1} cellSpacing={0} cellPadding={5} className='week-invoice'>\n\t\t\t\t<tbody style={{\n\t\t\t\t\ttextAlign: 'center'\n\t\t\t\t}}>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>#</th>\n\t\t\t\t\t\t<th style={{\n\t\t\t\t\t\t\ttextAlign: 'left'\n\t\t\t\t\t\t}}>Worker</th>\n\t\t\t\t\t\t{(state?.invoiceMode === 'week') && <th>Hours Worked</th>}\n\t\t\t\t\t\t<th>Hours Billed</th>\n\t\t\t\t\t\t<th>Hourly Rate in USD</th>\n\t\t\t\t\t\t<th>Total in USD</th>\n\t\t\t\t\t\t<th>Number of tickets Assigned</th>\n\t\t\t\t\t\t<th>Avg age (in working days)</th>\n\t\t\t\t\t</tr>\n\t\t\t\t\t{Object.keys(state.invoiceData).map((key, index) => {\n\t\t\t\t\t\tconst data = state.invoiceData[key];\n\t\t\t\t\t\tconst hasCardData = state.cardData && Object.keys(state.cardData).length > 0;\n\t\t\t\t\t\tconst cardKey = hasCardData ? getBestMatch(key, Object.keys(state.cardData) || Object.keys(state.invoiceData)) : key\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<tr key={key}>\n\t\t\t\t\t\t\t\t<td>{index + 1}</td>\n\t\t\t\t\t\t\t\t<td style={{\n\t\t\t\t\t\t\t\t\ttextAlign: 'left'\n\t\t\t\t\t\t\t\t}}>{key}</td>\n\t\t\t\t\t\t\t\t{(state?.invoiceMode === 'week') && <td>{data.hoursWorked}</td>}\n\t\t\t\t\t\t\t\t<td>{data.hoursBilled}</td>\n\t\t\t\t\t\t\t\t<td>$ {data.hourlyRate}</td>\n\t\t\t\t\t\t\t\t<td>{Number(data.totalInUSD).toFixed(2)}</td>\n\t\t\t\t\t\t\t\t<td>{state.cardData[cardKey]?.total?.cardTotal || '--'}</td>\n\t\t\t\t\t\t\t\t<td>{(state.cardData[cardKey]?.role === 'Team Member' ? state.cardData[cardKey]?.total?.average?.asTeamMember : state.cardData[cardKey]?.total?.average?.asQAPerson ) || '--'}</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t</tbody>\n\t\t\t\t<tfoot>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th></th>\n\t\t\t\t\t\t<th style={{\n                textAlign: 'left',\n                paddingTop: 20,\n                paddingBottom: 5,\n\t\t\t\t\t\t\t}}>Total</th>\n              {(state?.invoiceMode === 'week') && <th style={{\n                paddingTop: 20,\n                paddingBottom: 5,\n              }}>{state.total.hoursWorked}</th>}\n              <th style={{\n                paddingTop: 20,\n                paddingBottom: 5,\n              }}>{state.total.hoursBilled}</th>\n\t\t\t\t\t\t<th></th>\n            <th style={{\n              paddingTop: 20,\n              paddingBottom: 5,\n              }}>$ {numberWithCommas(parseFloat(state.total.usd).toFixed(2))}</th>\n\t\t\t\t\t\t<th></th>\n\t\t\t\t\t\t<th></th>\n\t\t\t\t\t</tr>\n\t\t\t\t\t{(state?.invoiceMode === 'month') && (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th></th>\n\t\t\t\t\t\t\t\t<th style={{\n\t\t\t\t\t\t\t\t\ttextAlign: 'left'\n\t\t\t\t\t\t\t\t}}>Total estimate for the month of {moment(state.dates[0]).add(1, 'month').format('MMMM')}</th>\n\t\t\t\t\t\t\t\t<th> - </th>\n\t\t\t\t\t\t\t\t<th> - </th>\n                  <th>$ {numberWithCommas(Number(state.nextMonthEstimate).toFixed(2))}</th>\n\t\t\t\t\t\t\t\t<th></th>\n\t\t\t\t\t\t\t\t<th></th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th></th>\n\t\t\t\t\t\t\t\t<th style={{\n\t\t\t\t\t\t\t\t\ttextAlign: 'left'\n                  }}> {Number(state.endBalance) < 0 ? 'Unpaid' : 'Paid'}  bucket for {moment(state.dates[0]).format('MMMM')}\n\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t<th> - </th>\n\t\t\t\t\t\t\t\t<th> - </th>\n                  <th>{numberWithCommas(bucket)}</th>\n\t\t\t\t\t\t\t\t<th></th>\n\t\t\t\t\t\t\t\t<th></th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th></th>\n\t\t\t\t\t\t\t\t<th style={{\n\t\t\t\t\t\t\t\t\ttextAlign: 'left'\n\t\t\t\t\t\t\t\t}}>Total Payable</th>\n\t\t\t\t\t\t\t\t<th> - </th>\n\t\t\t\t\t\t\t\t<th> - </th>\n                  <th>$ {numberWithCommas(totalPayable)}</th>\n\t\t\t\t\t\t\t\t<th></th>\n\t\t\t\t\t\t\t\t<th></th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t</tfoot>\n\t\t\t</table>\n\t\t\t<br />\n\t\t\t<div><b>\n          Amount due: $ {numberWithCommas(totalPayable)}\n\t\t\t</b></div>\n\t\t\t<br />\n        <div><p>Account balance after payment: ${numberWithCommas(Number(state.nextMonthEstimate).toFixed(2))}</p></div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport { WeekInvoice }","import React, { useState } from 'react'\nimport { Button, Form, Grid, Segment } from 'semantic-ui-react'\nimport sha1 from 'sha-1'\nimport { useNavigate } from 'react-router-dom';\nimport { useFirebase } from '../../firebase';\n\nconst LoginForm = () => {\n  const { getUser } = useFirebase();\n  const navigate = useNavigate()\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const onLogin = () => {\n    getUser(username).then((snapshot) => {\n      const users = snapshot.docs.map(doc => doc.data())\n      const user = users[0]\n      const passwordFromDb = user.password;\n      const passwordSha1 = sha1(password)\n      if (passwordSha1 === passwordFromDb) {\n        localStorage.setItem('authAccess', true)\n        navigate('/')\n      } else {\n        alert('authentication failed')\n      }\n    }).catch(e=> console.log({e}))\n  }\n  return (\n    <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\n      <Grid.Column style={{ maxWidth: 450 }}>\n        {/* <Header as='h2' color='teal' textAlign='center'>\n          <Image src='/logo.png' /> Log-in to your account\n        </Header> */}\n        <Form size='large'>\n          <Segment stacked>\n            <Form.Input fluid icon='user' iconPosition='left' placeholder='E-mail address'>\n              <input autoFocus value={username} onChange={(e) => setUsername(e.target.value)} />\n              </Form.Input>\n            <Form.Input\n              fluid\n              icon='lock'\n              iconPosition='left'\n              placeholder='Password'\n              type='password'\n\n            >\n              <input value={password} onChange={(e) => setPassword(e.target.value)} />\n              </Form.Input>\n\n            <Button onClick={onLogin} color='teal' fluid size='large'>\n              Login\n            </Button>\n          </Segment>\n        </Form>\n        {/* <Message>\n          New to us? <a href='#'>Sign Up</a>\n        </Message> */}\n      </Grid.Column>\n    </Grid>\n  )\n}\n\nexport { LoginForm };","import { useFormik } from \"formik\"\nimport { useEffect, useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { Form, Grid, List, Input, Label, Button, Confirm } from \"semantic-ui-react\"\nimport { useFirebase } from \"../../firebase\"\nimport { selectProjects, storeProjects } from \"../../store/projectsSlice\"\nimport { Header } from \"../../components/Header\";\nimport * as Yup from 'yup';\n\nexport const Projects = () => {\n\n  const { addProject, deleteProject, setProject, getProjectsList } = useFirebase()\n  const projects = useSelector(selectProjects)\n  const [isDeleting, setIsDeleting] = useState(false)\n  const [selectedProject, setSelectedProject] = useState((projects && Object.keys(projects).length > 0) ? Object.keys(projects)[0] : 'add_new_project')\n  const [showConfirm, setShowConfirm] = useState(false)\n\n\n  const initialValues = {\n    name: '',\n    last_invoice_number: '',\n    month_balance: '',\n    monthly_invoice_address: '',\n    week_balance: '',\n    weekly_invoice_address: ''\n  }\n  const DisplayingErrorMessagesSchema = Yup.object().shape({\n    name: Yup.string().required('Required'),\n    last_invoice_number: Yup.string().required('Required').test('Digits Only', 'Invalid Number', value => /^\\d+$/.test(value)),\n    month_balance: Yup.string().required('Required').test('Digits Only', 'Invalid Number', value => /^[+-]?([0-9]+([.][0-9]*)?|[.][0-9]+)$/.test(value)),\n    week_balance: Yup.string().required('Required').test('Digits Only', 'Invalid Number', value => /^[+-]?([0-9]+([.][0-9]*)?|[.][0-9]+)$/.test(value)),\n    weekly_invoice_address: Yup.string().required('Required'),\n    monthly_invoice_address: Yup.string().required('Required')\n  });\n  const dispatch = useDispatch()\n\n  const updateProjectsList = () => {\n    return getProjectsList().then(r => {\n      const projects = r.docs.reduce((_projects, doc) => ({\n        ..._projects,\n        [doc.id]: doc.data(),\n      }), {})\n      dispatch(storeProjects(projects))\n\n    })\n  }\n\n  useEffect(() => {\n    updateProjectsList()\n  },[])\n\n  useEffect(() => {\n    if (!Object.keys(projects).includes(selectedProject)) {\n      setSelectedProject((projects && Object.keys(projects).length > 0) ? Object.keys(projects)[0] : 'add_new_project')\n    }\n  }, [projects])\n\n  useEffect(() => {\n    const project = projects[selectedProject]\n    if (project) {\n      formik.setValues({\n        name: project.name || '',\n        last_invoice_number: project.last_invoice_number || '',\n        month_balance: project.month_balance || '',\n        monthly_invoice_address: project.monthly_invoice_address || '',\n        week_balance: project.week_balance || '',\n        weekly_invoice_address: project.weekly_invoice_address || ''\n      })\n    } else {\n      formik.setValues(initialValues)\n      formik.resetForm()\n    }\n  }, [selectedProject])\n\n  const onSubmit = () => {\n    if (formik.isValid) {\n      formik.submitForm()\n    } else {\n      alert('Fill all fields!')\n    }\n  }\n\n  const onSubmitProjectForm = (values) => {\n    formik.setSubmitting(true)\n    if (selectedProject) {\n      if (selectedProject === 'add_new_project') {\n        addProject(values).then((r) => updateProjectsList().then(() => {\n          alert('Project Added Successfully')\n          formik.setSubmitting(false)\n        })).catch(() => alert('Something went wrong'))\n\n      } else {\n        setProject(selectedProject, values).then(r => updateProjectsList().then(() => {\n          alert('Project updated successfully')\n          formik.setSubmitting(false)\n        })).catch(() => alert('Something went wrong'))\n      }\n    }\n  }\n  const formik = useFormik({\n    initialValues,\n    validationSchema: DisplayingErrorMessagesSchema,\n    onSubmit: onSubmitProjectForm\n  })\n\n  const renderError = (key) => {\n    if (formik.touched[key] && formik.errors[key]) {\n      return <div style={{ margin: '10px 0px', color: '#9f3a38'}}>{formik.errors[key]}</div>\n    }\n  }\n\n  const onItemClick = (key) => {\n    setSelectedProject(key)\n  }\n  const onDeleteProject = () => {\n    setIsDeleting(true)\n    deleteProject(selectedProject).then((r) => updateProjectsList().then(() => {\n      alert('Project Deleted successfully')\n      setIsDeleting(false)\n    })).catch(() => alert('Something went wrong'))\n  }\n  return (\n    <>\n    <Header />\n      <div style={{ margin: 40 }}>\n        {selectedProject && selectedProject !== 'add_new_project' && <Confirm\n          open={showConfirm}\n          cancelButton='No'\n          confirmButton={<Button negative children='Yes' />}\n          content={`Are you sure you want to delete \"${projects[selectedProject]?.name || ''}\"?`}\n          onCancel={() => setShowConfirm(false)}\n          onConfirm={() => {\n            setShowConfirm(false);\n            onDeleteProject()\n          }}\n        />}\n      <Grid>\n        <Grid.Column mobile={16} tablet={5} computer={5}>\n          <List selection  verticalAlign='middle'>\n            {Object.keys(projects).map(key => {\n              const project = projects[key];\n              return (\n                <List.Item active={(selectedProject === key)} onClick={() => onItemClick(key)} key={key}>\n                  <List.Content>\n                    <List.Header>{project.name}</List.Header>\n                  </List.Content>\n                </List.Item>\n              )\n            })}\n            <List.Item active={(selectedProject === 'add_new_project')} onClick={() => onItemClick('add_new_project')} >\n              <List.Content>\n                <List.Header>Add New Project</List.Header>\n              </List.Content>\n            </List.Item>\n          </List>\n        </Grid.Column>\n        <Grid.Column mobile={16} tablet={11} computer={11}>\n            <Form>\n              <Form.Field error={formik.touched.name && formik.errors.name}>\n                <label>Project Name</label>\n                <Input type='text' placeholder='Project name'>\n                  <input id='name' name='name' onChange={formik.handleChange} value={formik.values.name} onBlur={formik.handleBlur} />\n                </Input>\n                {renderError('name')}\n            </Form.Field>\n              <Form.Field onBlur={formik.handleBlur} error={formik.touched.last_invoice_number && formik.touched.last_invoice_number && formik.errors.last_invoice_number}>\n              <label>Last Invoice Number</label>\n              <Input labelPosition='left' type='text' placeholder='Invoice number'>\n                <Label basic>#</Label>\n                  <input id='last_invoice_number' name='last_invoice_number' onChange={formik.handleChange} onBlur={formik.handleBlur} value={formik.values.last_invoice_number} />\n                </Input>\n                {renderError('last_invoice_number')}\n            </Form.Field>\n              <Form.Field error={formik.touched.week_balance && formik.errors.week_balance}>\n              <label>Week Balance</label>\n                <Input  labelPosition='left' type='text' placeholder='Amount'>\n                <Label basic>$</Label>\n                  <input id='week_balance' name='week_balance' onChange={formik.handleChange} onBlur={formik.handleBlur} value={formik.values.week_balance} />\n                </Input>\n                {renderError('week_balance')}\n            </Form.Field>\n              <Form.Field error={formik.touched.month_balance && formik.errors.month_balance}>\n              <label>Month Balance</label>\n                <Input  labelPosition='left' type='text' placeholder='Amount'>\n                <Label basic>$</Label>\n                  <input onBlur={formik.handleBlur} id='month_balance' name='month_balance' onChange={formik.handleChange} value={formik.values.month_balance} />\n                </Input>\n                {renderError('month_balance')}\n            </Form.Field>\n              <Form.TextArea id='weekly_invoice_address' onBlur={formik.handleBlur} error={formik.touched.weekly_invoice_address && formik.errors.weekly_invoice_address} onChange={(e, { value }) => formik.setFieldValue('weekly_invoice_address', value)} label='Address ( Weekly Invoice )' placeholder='enter the address' value={formik.values.weekly_invoice_address} />\n              <Form.TextArea id='monthly_invoice_address' onBlur={formik.handleBlur} error={formik.touched.monthly_invoice_address && formik.errors.monthly_invoice_address} onChange={(e, { value }) => formik.setFieldValue('monthly_invoice_address', value)} value={formik.values.monthly_invoice_address} label='Address ( Monthly Invoice )' placeholder='enter the address' />\n            <Button loading={formik.isSubmitting} onClick={onSubmit} color='blue' type='submit'>{(selectedProject === 'add_new_project') ? 'Add' : 'Update'}</Button>\n            {(selectedProject !== 'add_new_project') && (\n              <Button loading={isDeleting} onClick={() => setShowConfirm(true)} negative type='submit'>Delete</Button>\n            )}\n          </Form>\n        </Grid.Column>\n      </Grid>\n      </div>\n    </>\n  )\n}","export default __webpack_public_path__ + \"static/media/Arial_Bold.8996fe3e.ttf\";","export default __webpack_public_path__ + \"static/media/Arial.1c8866ea.ttf\";","export default __webpack_public_path__ + \"static/media/Arial-mt-extra-bold.46aae5a9.ttf\";","import React, { useEffect } from 'react';\nimport { Document, Page, Text, View, StyleSheet, PDFViewer, Font } from '@react-pdf/renderer';\nimport { useLocation } from 'react-router-dom';\nimport moment from 'moment';\nimport { numberWithCommas } from '../../utils/functions';\nimport arialBold from '../../assets/fonts/Arial_Bold.ttf';\nimport arial from '../../assets/fonts/Arial.ttf';\nimport arialExtraBold from '../../assets/fonts/Arial-mt-extra-bold.ttf'\n\nFont.register({\n  family: 'Arial', fonts: [\n    { src: arial, fontWeight: 'normal' },\n    { src: arialBold, fontStyle: 'normal', fontWeight: 'bold' },\n    { src: arialExtraBold, fontStyle: 'normal', fontWeight: 'bolder' },\n  ]\n});\n\n// Create Document Component\nexport const InvoicePDF = () => {\n  const { state } = useLocation()\n  const bucket = `$ ${Number(state.endBalance) * -1}`\n  const endBalance = `$ ${Number(state.endBalance)}`\n  const totalPayable = (Number(state.nextMonthEstimate) - Number(state.endBalance)).toFixed(2)\n\n  const isWeekMode = (state?.invoiceMode === 'week')\n\n  const renderAddressTable = () => (\n    <View style={styles.table}>\n      <View style={{ flexDirection: 'row', borderWidth: 1, marginRight: 40}}>\n        <Text style={[styles.cellText, styles.cellBoldText, {borderRightWidth: 1}]}>From</Text>\n        <Text style={[styles.cellText, styles.cellBoldText]}>To</Text>\n      </View>\n      <View style={{ flexDirection: 'row', marginRight: 40, borderWidth: 1, borderTopWidth: 0, top: -1}}>\n        <Text style={[styles.cellText, { borderRightWidth: 1, paddingBottom: 20, }]}>{state.from}</Text>\n        <Text style={[styles.cellText, { paddingBottom: 20,}]}>{state.to}</Text>\n      </View>\n    </View>\n  )\n\n  const renderBalanceTable = () => (\n    <View style={{marginTop: 15}}>\n      <View style={{ flexDirection: 'row', borderWidth: 1, marginRight: 40 }}>\n        <Text style={[styles.cellText, styles.cellBoldText, {borderRightWidth: 1}]}>{`Starting ${state?.invoiceMode === 'week' ? 'week' : 'monthly'} balance`}</Text>\n        <Text style={[styles.cellText, {flex: 2}]}>$ {numberWithCommas(Number(state.startBalance).toFixed(2))}</Text>\n      </View>\n      <View style={{ flexDirection: 'row', marginRight: 40, borderWidth: 1, borderTopWidth: 0, top: -1 }}>\n        <Text style={[styles.cellText, styles.cellBoldText, {borderRightWidth: 1}]}>{`Ending ${state?.invoiceMode === 'week' ? 'week' : 'monthly'} balance`}</Text>\n        <Text style={[styles.cellText, { flex: 2 }]}>{numberWithCommas(endBalance)}</Text>\n      </View>\n    </View>\n  )\n\n  const renderInvoiceTable = () => (\n    <View style={styles.table}>\n      <View style={{flexDirection: 'row', fontFamily: 'Arial', fontWeight: 'bold', fontSize: 11, marginRight: 33, lineHeight: 1.3}}>\n        <Text style={{ padding: 5, textAlign: 'center', width: 20, borderWidth: 1}}>#</Text>\n        <Text style={{ padding: 5, textAlign: 'center', flex: 1, borderWidth: 1, left: -1}}>Worker</Text>\n        {(state?.invoiceMode === 'week') && <Text style={{  padding: 5, textAlign: 'center', width: 55, borderWidth: 1, left: -2 }}>Hours Worked</Text>}\n        <Text style={{ padding: 5, textAlign: 'center', width: 55, borderWidth: 1, left: isWeekMode ? -3 : -2}}>Hours Billed</Text>\n        <Text style={{padding: 5, textAlign: 'center', width: 50, borderWidth: 1, left: isWeekMode ? -4 : -3}}>Hourly Rate in USD</Text>\n        <Text style={{ padding: 5, textAlign: 'center', width: 80, borderWidth: 1, left: isWeekMode ? -5 : -4}}>Total in USD</Text>\n        <Text style={{ padding: 5, textAlign: 'center', width: 65, borderWidth: 1, left: isWeekMode ? -6 : -5}}>Number of tickets Assigned</Text>\n        <Text style={{ padding: 5, textAlign: 'center', width: 85, borderWidth: 1, left: isWeekMode ? -7 : -6 }}>Avg age (in working{'\\n'}days)</Text>\n      </View>\n      {Object.keys(state.invoiceData).map((key, index) => {\n        const data = state.invoiceData[key]\n        return (\n          <View style={{ flexDirection: 'row', fontFamily: 'Arial', fontWeight: 'normal', fontSize: 11, marginRight: 33, lineHeight: 1, top: -(index+1)}}>\n            <Text style={{ padding: 5, textAlign: 'center', width: 20, borderWidth: 1 }}>{index + 1}</Text>\n            <Text style={{ padding: 5, textAlign: 'left', flex: 1, borderWidth: 1, left: -1 }}>{key}</Text>\n            {(state?.invoiceMode === 'week') && <Text style={{ padding: 5, textAlign: 'center', width: 55, borderWidth: 1, left: -2 }}>{data.hoursWorked}</Text>}\n            <Text style={{  padding: 5, textAlign: 'center', width: 55, borderWidth: 1, left: isWeekMode ? -3 : -2 }}>{data.hoursBilled}</Text>\n            <Text style={{ padding: 5, textAlign: 'center', width: 50, borderWidth: 1, left: isWeekMode ? -4 : -3 }}>$ {data.hourlyRate}</Text>\n            <Text style={{ padding: 5, textAlign: 'center', width: 80, borderWidth: 1, left: isWeekMode ? -5 : -4 }}>{Number(data.totalInUSD).toFixed(2)}</Text>\n            <Text style={{ padding: 5, textAlign: 'center', width: 65, borderWidth: 1, left: isWeekMode ? -6 : -5 }}> {state.cardData[key]?.total?.cardTotal || '--'}</Text>\n            <Text style={{ padding: 5, textAlign: 'center', width: 85, borderWidth: 1, left: isWeekMode ? -7 : -6 }}> {(state.cardData[key]?.role === 'Team Member' ? state.cardData[key]?.total?.average?.asTeamMember : state.cardData[key]?.total?.average?.asQAPerson) || '--'} </Text>\n          </View>\n        )\n      })}\n      <View style={{ flexDirection: 'row', fontFamily: 'Arial', fontWeight: 'bold', fontSize: 11, marginRight: 33, lineHeight: 1.3, top: -Object.keys(state.invoiceData).length - 1}}>\n        <Text style={{ paddingHorizontal: 5, paddingBottom:0, height:30, paddingTop: 15, textAlign: 'center', width: 20, borderWidth: 1 }}></Text>\n        <Text style={{ paddingHorizontal: 5, paddingBottom:0, height:30, paddingTop: 15, textAlign: 'left', flex: 1, borderWidth: 1, left: -1, alignSelf: 'flex-end' }}>{isWeekMode ? 'Total' : 'Billed Total' }</Text>\n        {(state?.invoiceMode === 'week') && <Text style={{ paddingHorizontal: 5, paddingBottom:0, height:30, paddingTop: 15, textAlign: 'center', width: 55, borderWidth: 1, left: -2 }}>{state.total.hoursWorked}</Text>}\n        <Text style={{ paddingHorizontal: 5, paddingBottom:0, height:30, paddingTop: 15, textAlign: 'center', width: 55, borderWidth: 1, left: isWeekMode ? -3 : -2 }}>{state.total.hoursBilled}</Text>\n        <Text style={{ paddingHorizontal: 5, paddingBottom:0, height:30, paddingTop: 15, textAlign: 'center', width: 50, borderWidth: 1, left: isWeekMode ? -4 : -3 }}></Text>\n        <Text style={{ paddingHorizontal: 5, paddingBottom:0, height:30, paddingTop: 15, textAlign: 'center', width: 80, borderWidth: 1, left: isWeekMode ? -5 : -4 }}>$ {numberWithCommas(parseFloat(state.total.usd).toFixed(2))}</Text>\n        <Text style={{ paddingHorizontal: 5, paddingBottom:0, height:30, paddingTop: 15, textAlign: 'center', width: 65, borderWidth: 1, left: isWeekMode ? -6 : -5 }}></Text>\n        <Text style={{ paddingHorizontal: 5, paddingBottom:0, height:30, paddingTop: 15, textAlign: 'center', width: 85, borderWidth: 1, left: isWeekMode ? -7 : -6 }}></Text>\n      </View>\n    </View>\n  )\n  const renderMonthInvoiceDetails = () => {\n    const data = [\n      { title: `Total estimate for the month of ${moment(state.dates[0]).add(1, 'month').format('MMMM')}`, value: `$ ${numberWithCommas(Number(state.nextMonthEstimate).toFixed(2))}` },\n      { title: `${Number(state.endBalance) < 0 ? 'Unpaid' : 'Paid' }  bucket for ${ moment(state.dates[0]).format('MMMM')}`, value: numberWithCommas(bucket)},\n      { title: 'Total Payable', value: `$ ${numberWithCommas(totalPayable)}`},\n    ]\n    return state.invoiceMode === 'month' && data.map((item, index) => (\n      <View style={{ flexDirection: 'row', fontFamily: 'Arial', fontWeight: 'bold', fontSize: 11, marginRight: 33, lineHeight: 1.3, top: -Object.keys(state.invoiceData).length - 1 - ( index + 1) }}>\n        <Text style={{ paddingHorizontal: 5, paddingBottom: 0, height: 30, paddingTop: 15, textAlign: 'center', width: 20, borderWidth: 1 }}></Text>\n        <Text style={{ paddingHorizontal: 5, paddingBottom: 0, height: 30, paddingTop: 15, textAlign: 'left', flex: 1, borderWidth: 1, left: -1, alignSelf: 'flex-end' }}>{item.title}</Text>\n        <Text style={{ paddingHorizontal: 5, paddingBottom: 0, height: 30, paddingTop: 15, textAlign: 'center', width: 55, borderWidth: 1, left: -2 }}> - </Text>\n        <Text style={{ paddingHorizontal: 5, paddingBottom: 0, height: 30, paddingTop: 15, textAlign: 'center', width: 50, borderWidth: 1, left: -3 }}> - </Text>\n        <Text style={{ paddingHorizontal: 5, paddingBottom: 0, height: 30, paddingTop: 15, textAlign: 'center', width: 80, borderWidth: 1, left: -4 }}>{item.value}</Text>\n        <Text style={{ paddingHorizontal: 5, paddingBottom: 0, height: 30, paddingTop: 15, textAlign: 'center', width: 65, borderWidth: 1, left: -5 }}></Text>\n        <Text style={{ paddingHorizontal: 5, paddingBottom: 0, height: 30, paddingTop: 15, textAlign: 'center', width: 85, borderWidth: 1, left: -6 }}></Text>\n      </View>\n    ))\n  }\n\n  const renderDueAndBalance = () => (\n    <View>\n      <View style={{paddingTop: 5}}>\n        <Text style={{\n          fontSize: 11,\n          fontFamily: 'Arial',\n          fontWeight: 'bold'\n        }}>Amount due: $ {isWeekMode ? '--' : numberWithCommas(totalPayable)}</Text>\n      </View>\n      <View style={{paddingTop: 5}}>\n        <Text style={{\n          fontSize: 11,\n          fontFamily: 'Arial',\n          fontWeight: 'normal'\n        }}>Account balance after payment: <Text style={{fontWeight: 'bold'}}>${isWeekMode ? '--' : numberWithCommas(Number(state.nextMonthEstimate).toFixed(2))}</Text></Text>\n      </View>\n    </View>\n  )\n\n  return (\n    <PDFViewer style={styles.document}>\n      <Document>\n        <Page size=\"LETTER\" style={styles.page}>\n          {\n            (state.invoiceMode === 'week') ? (\n              <>\n                <View style={styles.section}>\n                  <Text>Invoice #{state.invoiceNumber}</Text>\n                </View>\n                <View style={styles.section}>\n                  <Text>Period: {moment(state.dates[0]).format('MMMM D ,YYYY ')} through {moment(state.dates[1]).format('MMMM D ,YYYY ')}</Text>\n                </View>\n              </>\n            ) : (\n              <View style={styles.section}>\n                  <Text>Invoice #{state.invoiceNumber} - {moment(state.dates[0]).format('MMMM').toUpperCase()} {moment(state.dates[0]).format('YYYY')}</Text>\n              </View>\n            )\n          }\n          {renderAddressTable()}\n          {renderBalanceTable()}\n          <Text style={{\n            fontFamily: 'Arial',\n            marginTop: 10,\n            marginBottom: 5,\n            fontSize: 11,\n            color: '#454545'\n          }}>Work Log - <Text style={{ fontWeight: 'bold' }}>{state.project}</Text></Text>\n          {renderInvoiceTable()}\n          {renderMonthInvoiceDetails()}\n          {renderDueAndBalance()}\n        </Page>\n      </Document>\n    </PDFViewer>\n  );\n}\n\n// Create styles\nconst styles = StyleSheet.create({\n  page: {\n    paddingHorizontal: 30,\n    paddingVertical: 30,\n    fontFamily: 'Arial',\n  },\n  section: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    paddingBottom: 20,\n  },\n  document: {\n    width: '100vw',\n    height: '100vh'\n  },\n  table: {\n    // borderWidth: 1,\n    width: '100%',\n  },\n  cellBoldText: {\n    fontWeight: 'bold',\n  },\n  cellText: {\n    flex: 1,\n    fontSize: 11,\n    fontWeight: 'normal',\n    padding: 5,\n    fontFamily: 'Arial'\n  }\n});\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useTable } from \"react-table\";\nimport { useLocation } from \"react-router-dom\";\nimport moment from 'moment';\nimport stringSimilarity from 'string-similarity';\nimport { get } from \"firebase/database\";\nimport { getNextDayOfTheWeek, numberWithCommas } from \"../../utils/functions\";\nimport jsPDF from \"jspdf\";\nimport { Button } from \"semantic-ui-react\";\nimport { useSelector } from \"react-redux\";\nimport { selectProjects, storeProjects } from \"../../store/projectsSlice\";\nimport { useDispatch } from \"react-redux\";\nimport { useFirebase } from \"../../firebase\";\nimport { selectAppData } from \"../../store/invoiceSlice\";\nimport { selectShouldEnableCardCalculation } from \"../../store/UISlice\";\n\n\nconst Styles = styled.div`\n  padding: 1rem;\n  font-size: 15px;\n  font-weight: 'normal';\n  font-family: 'Arial';\n  h2 {\n    font-size: 24px;\n    font-weight: 900;\n  }\n  table {\n    border-spacing: 0;\n    border: 1px solid black;\n\n    tr {\n      :last-child {\n        td {\n          border-bottom: 0;\n        }\n      }\n    }\n\n    th,\n    td {\n      margin: 0;\n      padding: 0.5rem;\n      border-bottom: 1px solid black;\n      border-right: 1px solid black;\n\n      :last-child {\n        border-right: 0;\n      }\n    }\n  }\n`;\n\nfunction Table({ columns, data }) {\n  // Use the state and functions returned from useTable to build your UI\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  });\n\n  // Render the UI for your table\n  return (\n    <table {...getTableProps()}>\n      <thead>\n        {headerGroups.map((headerGroup) => (\n          <tr {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map((column) => (\n              <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      <tbody {...getTableBodyProps()}>\n        {rows.map((row, i) => {\n          prepareRow(row);\n          return (\n            <tr {...row.getRowProps()}>\n              {row.cells.map((cell, index) => {\n                return (\n                  <td\n                    {...cell.getCellProps()}\n                    style={{\n                      fontSize: \"92px\"\n                    }}\n                  >\n                    {cell.render(\"Cell\")}\n                  </td>\n                );\n              })}\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n}\n\nfunction AddressTable({ columns, data}) {\n  // Use the state and functions returned from useTable to build your UI\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  });\n\n  // Render the UI for your table\n  return (\n    <table style={{ width: \"100%\" }} {...getTableProps()}>\n      <thead>\n        {headerGroups.map((headerGroup) => (\n          <tr {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map((column) => (\n              <th\n                style={{ width: \"50%\", textAlign: \"left\" }}\n                {...column.getHeaderProps()}\n              >\n                {column.render(\"Header\")}\n              </th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      <tbody {...getTableBodyProps()} style={{\n        verticalAlign: 'top',\n        whiteSpace: 'pre-wrap',\n        textAlign: 'left'\n      }}>\n        {rows.map((row, i) => {\n          prepareRow(row);\n          return (\n            <tr {...row.getRowProps()}>\n              {row.cells.map((cell) => {\n                return <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>;\n              })}\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n}\n\nfunction BillingInfoTable({ columns, data }) {\n  // Use the state and functions returned from useTable to build your UI\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  });\n\n  // Render the UI for your table\n  return (\n    <table style={{ width: \"100%\" }} {...getTableProps()}>\n      <tbody {...getTableBodyProps()} style={{\n        verticalAlign: 'top',\n        whiteSpace: 'pre-wrap',\n        textAlign: 'left'\n      }}>\n        {rows.map((row, i) => {\n          prepareRow(row);\n          return (\n            <tr {...row.getRowProps()}>\n              {row.cells.map((cell, index) => {\n                return <td style={{ width: \"50%\", textAlign: index === 0 ? \"left\" : \"right\" }} {...cell.getCellProps()}><b>{cell.render(\"Cell\")}</b></td>;\n              })}\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n}\n\nfunction InvoiceTable({ columns, data, state }) {\n\n  const showCardColumns = useSelector(selectShouldEnableCardCalculation)\n  const bucket = `$ ${Number(state.endBalance) * -1}`\n  const endBalance = `$ ${Number(state.endBalance)}`\n  const totalPayable = (Number(state.nextMonthEstimate) - Number(state.endBalance)).toFixed(2)\n  // Use the state and functions returned from useTable to build your UI\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  });\n\n  // Render the UI for your table\n  const getStyle = (id) => {\n    switch (id) {\n      case \"worker\": return {\n        flex: 1,\n        textAlign: 'left'\n      }\n      case \"hoursBilled\":\n      case \"hourlyRate\":\n      case \"hoursWorked\":\n      case \"noOfTickets\": return {\n        width: 80,\n        textAlign: 'center'\n      }\n      case \"averageAge\":\n      case \"totalInUSD\": return {\n        width: 100,\n        textAlign: 'center'\n      }\n      default: return {\n        width: 'auto',\n        textAlign: 'center'\n      }\n    }\n  }\n  return (\n    <table style={{ width: \"100%\" }} {...getTableProps()}>\n      <thead>\n        {headerGroups.map((headerGroup) => (\n          <tr {...headerGroup.getHeaderGroupProps()}>\n            <th>#</th>\n            {headerGroup.headers.map((column) => {\n              return (\n                <th\n                  style={getStyle(column.id)}\n                  {...column.getHeaderProps()}\n                >\n                  {column.render(\"Header\")}\n                </th>\n              )\n            })}\n          </tr>\n        ))}\n      </thead>\n      <tbody {...getTableBodyProps()} >\n        {rows.map((row, i) => {\n          prepareRow(row);\n          return (\n            <tr {...row.getRowProps()}>\n              <td>{i + 1}</td>\n              {row.cells.map((cell) => {\n                return <td {...cell.getCellProps()} style={getStyle(cell.column.id)} >{cell.render(\"Cell\")}</td>;\n              })}\n            </tr>\n          );\n        })}\n        <tr style={{fontWeight: 'bolder', textAlign: 'center'}}>\n          <td></td>\n          <td style={{\n            textAlign: 'left',\n            paddingTop: 20,\n            paddingBottom: 5,\n          }}>Total</td>\n          {(state?.invoiceMode === 'week') && <td style={{\n            paddingTop: 20,\n            paddingBottom: 5,\n          }}>{state.total.hoursWorked}</td>}\n          <td style={{\n            paddingTop: 20,\n            paddingBottom: 5,\n          }}>{state.total.hoursBilled}</td>\n          <td></td>\n          <td style={{\n            paddingTop: 20,\n            paddingBottom: 5,\n          }}>$ {numberWithCommas(parseFloat(state.total.usd).toFixed(2))}</td>\n          {\n            showCardColumns && (\n              <>\n                <td></td>\n                <td></td>\n              </>\n            )\n          }\n        </tr>\n        {(state?.invoiceMode === 'month') && (\n          <>\n            <tr style={{\n              fontWeight: 'bolder',\n              textAlign: 'center',\n            }}>\n              <td></td>\n              <td style={{\n                textAlign: 'left'\n              }}>Total estimate for the month of {moment(state.dates[0]).add(1, 'month').format('MMMM')}</td>\n              <td> - </td>\n              <td> - </td>\n              <td>$ {numberWithCommas(Number(state.nextMonthEstimate).toFixed(2))}</td>\n              {\n                showCardColumns && (\n                  <>\n                    <td></td>\n                    <td></td>\n                  </>\n                )\n              }\n            </tr>\n            <tr style={{\n              fontWeight: 'bolder',\n              textAlign: 'center',\n            }}>\n              <td></td>\n              <td style={{\n                textAlign: 'left'\n              }}> {Number(state.endBalance) < 0 ? 'Unpaid' : 'Paid'}  bucket for {moment(state.dates[0]).format('MMMM')}\n              </td>\n              <td> - </td>\n              <td> - </td>\n              <td>{numberWithCommas(bucket)}</td>\n              {\n                showCardColumns && (\n                  <>\n                    <td></td>\n                    <td></td>\n                  </>\n                )\n              }\n            </tr>\n            <tr style={{\n              fontWeight: 'bolder',\n              textAlign: 'center',\n            }}>\n              <td></td>\n              <td style={{\n                textAlign: 'left'\n              }}>Total Payable</td>\n              <td> - </td>\n              <td> - </td>\n              <td>$ {numberWithCommas(totalPayable)}</td>\n              {\n                showCardColumns && (\n                  <>\n                    <td></td>\n                    <td></td>\n                  </>\n                )\n              }\n            </tr>\n          </>\n        )}\n      </tbody>\n      {/* <tfoot>\n\n      </tfoot> */}\n    </table>\n  );\n}\n\nfunction BalanceTable({ columns, data }) {\n  // Use the state and functions returned from useTable to build your UI\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  });\n\n  // Render the UI for your table\n  return (\n    <table style={{ width: \"100%\" }} {...getTableProps()}>\n      {/* <thead>\n        {headerGroups.map(headerGroup => (\n          <tr {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map(column => (\n              <th style={{width: '50%', textAlign: 'left'}} {...column.getHeaderProps()}>{column.render('Header')}</th>\n            ))}\n          </tr>\n        ))}\n      </thead> */}\n      <tbody {...getTableBodyProps()}>\n        {rows.map((row, i) => {\n          prepareRow(row);\n          return (\n            <>\n              <tr {...row.getRowProps()}>\n                {row.cells.map((cell, index) => {\n                  return <td {...(index === 0 && {\n                    style: {\n                      fontWeight: 'bold',\n                      width: 200,\n                    }\n                  })} {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>;\n                })}\n              </tr>\n\n            </>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n}\n\nfunction Invoice() {\n  const { state } = useLocation()\n\n  const showCardColumns = useSelector(selectShouldEnableCardCalculation)\n\n  const { getProjectsList, setProject, setInvoiceAppInfo } = useFirebase()\n\n  const projects = useSelector(selectProjects);\n  const appData = useSelector(selectAppData);\n  const dispatch = useDispatch();\n\n  const [showPrintButton, setShowPrintButton] = useState(true)\n\n  const printAsPDF = () => {\n    setShowPrintButton(false)\n    setTimeout(() => {\n      window.print()\n      setTimeout(() => {\n        setShowPrintButton(true)\n      }, 500)\n    }, 100)\n\n  }\n\n  const updateProjectsList = () => {\n    return getProjectsList().then(r => {\n      const projects = r.docs.reduce((_projects, doc) => ({\n        ..._projects,\n        [doc.id]: doc.data(),\n      }), {})\n      dispatch(storeProjects(projects))\n\n    })\n  }\n\n  const saveBalance = () => {\n    const project = projects[state.project.key]\n    if (state.invoiceMode === 'month') {\n      setProject(state.project.key, {\n        ...project,\n        month_balance: state.endBalance\n      }).then(r => updateProjectsList().then(() => {\n        setInvoiceAppInfo({\n          ...appData,\n          last_invoice_number: state.invoiceNumber\n        }).then(() => alert('Saved successfully'))\n      })).catch(() => alert('Something went wrong'))\n    } else {\n      setProject(state.project.key, {\n        ...project,\n        week_balance: state.endBalance\n      }).then(r => updateProjectsList().then(() => {\n        setInvoiceAppInfo({\n          ...appData,\n          last_invoice_number: state.invoiceNumber\n        }).then(() => alert('Saved successfully'))\n      })).catch(() => alert('Something went wrong'))\n    }\n  }\n\n  const totalPayable = (Number(state.nextMonthEstimate) - Number(state.endBalance)).toFixed(2)\n\n  const getBestMatch = (key, array) => {\n    var matches = stringSimilarity.findBestMatch(key, array);\n    return matches?.bestMatch?.rating > 0.6 ? matches?.bestMatch?.target : key\n  }\n\n  const addressTableColumns = React.useMemo(\n    () => [\n      {\n        Header: \"From\",\n        accessor: \"from\"\n      },\n      {\n        Header: \"To\",\n        accessor: \"to\"\n      }\n    ],\n    []\n  );\n  const billingInfoTableColumns = React.useMemo(\n    () => [\n      {\n        Header: '',\n        accessor: 'period'\n      },\n      {\n        Header:'',\n        accessor:  'billingDate',\n      }\n    ],\n    []\n  );\n  const balanceTableColumns = React.useMemo(\n    () => [\n      {\n        Header: \"Labels\",\n        accessor: \"label\"\n      },\n      {\n        Header: \"Balance\",\n        accessor: \"value\"\n      }\n    ],\n    []\n  );\n\n  const invoiceTableColumns = React.useMemo(\n    () => [\n      {\n        Header: \"Worker\",\n        accessor: \"worker\"\n      },\n      ...(state.invoiceMode === 'week' ? [{Header: 'Hours Worked', accessor: 'hoursWorked'}] : []),\n      {\n        Header: \"Hours Billed\",\n        accessor: \"hoursBilled\"\n      },\n      {\n        Header: \"Hourly Rate in USD\",\n        accessor: \"hourlyRate\"\n      },\n      {\n        Header: \"Total in USD\",\n        accessor: \"totalInUSD\"\n      },\n      ...(showCardColumns ? [\n        {\n          Header: \"Number of tickets Assigned\",\n          accessor: \"noOfTickets\"\n        },\n        {\n          Header: \"Avg age (in working days)\",\n          accessor: \"averageAge\"\n        },\n      ] : [])\n    ],\n    []\n  );\n\n  const addressData = React.useMemo(\n    () => [\n      {\n        from: state.from,\n        to: state.to,\n      }\n    ],\n    []\n  );\n  const billingData = React.useMemo(\n    () => [\n      {\n        period: `Billing Period:  ${moment(state.dates[0]).format('Do')} to ${moment(state.dates[1]).format('Do')} ${moment(state.dates[0]).format('MMMM YYYY')}`,\n        billingDate: `Invoice Date:${moment(state.dates[1]).add(1, 'days').weekday() === 0 ? moment(state.dates[1]).add(2, 'days').format('DD-MM-YYYY') :  moment(state.dates[1]).add(1, 'days').format('DD-MM-YYYY')}`,\n      }\n    ],\n    []\n  );\n  const balanceData = React.useMemo(\n    () => [\n      { label: `Starting ${state?.invoiceMode === 'week' ? 'week' : 'monthly'} balance`, value: '$ ' + numberWithCommas(Number(state.startBalance).toFixed(2)) },\n      { label: `Ending ${state?.invoiceMode === 'week' ? 'week' : 'monthly'} balance`, value: '$ ' + numberWithCommas(Number(state.endBalance).toFixed(2)) }\n    ],\n    []\n  );\n\n  const invoiceData = Object.keys(state.invoiceData).sort().map((key, index) => {\n    const data = state.invoiceData[key];\n    const hasCardData = state.cardData && Object.keys(state.cardData).length > 0;\n    const cardKey = hasCardData ? getBestMatch(key, Object.keys(state.cardData) || Object.keys(state.invoiceData)) : key\n    return {\n      worker: key,\n      hoursBilled: data.hoursBilled,\n      hoursWorked: data.hoursWorked,\n      hourlyRate: data.hourlyRate,\n      totalInUSD: Number(data.totalInUSD).toFixed(2),\n      noOfTickets: (state?.cardData && state?.cardData[cardKey]?.total?.cardTotal) || '--',\n      averageAge: (state?.cardData && state?.cardData[cardKey]?.role === 'Team Member' ? state.cardData[cardKey]?.total?.average?.asTeamMember : (state?.cardData && state.cardData[cardKey]?.total?.average?.asQAPerson) || '--')\n    }\n  })\n\n\n  return (\n    <Styles>\n      {\n        showPrintButton && (\n          <div style={{padding: 10, marginBottom: 50, boxShadow: '0px 1px 3px grey'}}>\n            <Button onClick={printAsPDF}>Print</Button>\n            <Button onClick={saveBalance}>Save Balance & Invoice Number</Button>\n          </div>\n        )\n      }\n      <div style={{ width: 800, margin: \"auto\", paddingRight: 30 }}>\n        {\n          (state.invoiceMode === 'week') ? (\n            <>\n              <h2>Invoice #{state.invoiceNumber}</h2>\n              <h2>Period: {moment(state.dates[0]).format('MMMM D ,YYYY ')} through {moment(state.dates[1]).format('MMMM D ,YYYY ')}</h2>\n            </>\n          ) : (\n              <h2>Invoice #{state.invoiceNumber} - {moment(state.dates[0]).format('MMMM').toUpperCase()} {moment(state.dates[0]).format('YYYY')}</h2>\n            )\n        }\n        {/* <Table columns={columns} data={data} /> */}\n        <br /><BillingInfoTable columns={billingInfoTableColumns} data={billingData} />\n        <br /><AddressTable columns={addressTableColumns} data={addressData} />\n        <br /><BalanceTable columns={balanceTableColumns} data={balanceData} />\n        <br />\n        <div style={{ color: '#525659' }}>\n          Work Log - <span style={{fontWeight: 'bolder'}}>{state.project.name}</span>\n        </div>\n        <br /><InvoiceTable columns={invoiceTableColumns} data={invoiceData} state={state} />\n        <br />\n        <div><b>\n          Amount due: $ {(state.invoiceMode === 'week') ? '---' :  numberWithCommas(totalPayable) }\n        </b></div>\n        <div><p>Account balance after payment: <span style={{ fontWeight: 'bolder' }}>{(state.invoiceMode === 'week') ? '---' : `$${numberWithCommas(Number(state.nextMonthEstimate).toFixed(2))}`}</span></p></div>\n\n      </div>\n    </Styles>\n  );\n}\n\nexport default Invoice;\n","import './App.css';\nimport 'semantic-ui-css/semantic.min.css'\nimport {\n\tBrowserRouter,\n\tRoutes,\n\tRoute,\n} from 'react-router-dom'\nimport { Home } from './containers/Home';\nimport { WeekInvoice } from './containers/WeekInvoice';\nimport { LoginForm } from './containers/Login';\nimport { Projects } from './containers/Projects';\nimport routes from './constants/routes';\nimport { InvoicePDF } from './containers/InvoicePDF';\nimport Invoice from './containers/Invoice';\n\nfunction App() {\n\treturn (\n\t\t<BrowserRouter>\n\t\t\t<Routes>\n\t\t\t\t<Route path={routes.DOWNLOAD_INVOICE} element={<InvoicePDF />} />\n\t\t\t\t<Route path={routes.PROJECTS} element={<Projects />} />\n\t\t\t\t<Route path={routes.WEEK_INVOICE} element={<WeekInvoice />} />\n\t\t\t\t<Route path={routes.INVOICE} element={<Invoice />} />\n\t\t\t\t<Route path={routes.LOGIN} element={<LoginForm />} />\n\t\t\t\t<Route path={routes.HOME} element={<Home />} />\n\t\t\t</Routes>\n\t\t</BrowserRouter>\n\t)\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit'\nimport projectsReducer from './projectsSlice';\nimport invoiceReducer from './invoiceSlice';\nimport UISlice from './UISlice';\n\nexport default configureStore({\n\treducer: {\n\t\tprojects: projectsReducer,\n\t\tinvoice: invoiceReducer,\n\t\tui: UISlice\n\t},\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}